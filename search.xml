<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>菊花链</title>
      <link href="2022/02/17/ju-hua-lian/"/>
      <url>2022/02/17/ju-hua-lian/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p><a href="https://www.acwing.com/problem/content/3350/">3347. 菊花链 - AcWing题库</a></p><p>每天，作为她绕农场行走的一部分，奶牛 Bessie 会经过她最喜爱的草地，其中种有 N 朵花（五颜六色的雏菊），编号为 1…N，排列成一行。</p><p>花 i 有 pi 朵花瓣。</p><p>作为一名崭露头角的摄影家，Bessie 决定给这些花拍些照片。</p><p>具体地说，对于每一对满足 1≤i≤j≤N 的花 (i,j)，Bessie 会给从花 i 到花 j 之间的所有花（包括 i 和 j）拍一张照。</p><p>后来 Bessie 查看这些照片时注意到有些照片里存在「平均」的花——一朵恰好有 P 朵花瓣的花，其中 P 等于照片中所有花的花瓣数量的平均值。</p><p>Bessie 的照片中有几张存在平均的花？</p><h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>输入的第一行包含 N。</p><p>第二行包含 N 个空格分隔的整数 p1…pN。</p><h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>输出存在平均的花的照片数量。</p><h5 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h5><p>1≤N≤100,<br>1≤pi≤1000</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, ans = 0, l = 1000010;</span><br><span class="line">static int[] a  = new int[1010];</span><br><span class="line">static int[] p  = new int[1010];</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">p[i] = inScanner.nextInt();</span><br><span class="line">a[i] = a[i - 1] + p[i];</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">ans = n;</span><br><span class="line">for(int i = 1; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line">for(int j = i + 1; j &lt;= n; j ++)</span><br><span class="line">{</span><br><span class="line">int t = (a[j] - a[i - 1]) / (j - i + 1);</span><br><span class="line">if(t * (j - i + 1) == a[j] - a[i - 1])</span><br><span class="line">for(int k = i; k &lt;= j; k ++)</span><br><span class="line">{</span><br><span class="line">if(p[k] == t)</span><br><span class="line">{</span><br><span class="line">ans ++;</span><br><span class="line">break;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.printf("%d", ans);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>社交距离II</title>
      <link href="2022/02/16/she-jiao-ju-chi-ii/"/>
      <url>2022/02/16/she-jiao-ju-chi-ii/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p><a href="https://www.acwing.com/problem/content/1662/">1660. 社交距离 II - AcWing题库</a></p><p>由于高传染性的牛传染病 COWVID-19 的爆发，Farmer John 非常担忧他的奶牛们的健康。</p><p>尽管他尽了最大努力使他的 N 头奶牛们践行“社交距离”，还是有许多奶牛不幸染上了疾病。</p><p>编号为 1…N 的奶牛们分别位于一条长直道路上的不同位置（相当于一维数轴），奶牛 i 位于位置 xi。</p><p>Farmer John 知道存在一个半径 R，任何与一头被感染的奶牛距离不超过 R 单位的奶牛也会被感染（然后会传染给与其距离 R 单位内的奶牛，以此类推）。</p><p>不幸的是，Farmer John 并不确切知道 R 的值。</p><p>他只知道他的哪些奶牛被感染了。</p><p>给定这个数据，求出起初感染疾病的奶牛的最小数量。</p><h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>输入的第一行包含 N。</p><p>以下 N 行每行用两个整数 x 和 s 描述一头奶牛，其中 x 为位置，s 为 0 表示健康的奶牛，1 表示染病的奶牛，并且所有可能因传播而染病的奶牛均已染病。</p><h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>输出在疾病开始传播之前已经得病的奶牛的最小数量。</p><h5 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h5><p>1≤N≤1000,<br>0≤x≤10^6</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, ans = 0, l = 1000010;</span><br><span class="line">static node[] a = new node[1010];</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">a[i] = new node(inScanner.nextInt(), inScanner.nextInt());</span><br><span class="line">inScanner.close();</span><br><span class="line">Arrays.sort(a, 1, n + 1);</span><br><span class="line">for(int i = 2; i &lt;= n; i ++)</span><br><span class="line">if((a[i].v ^ a[i - 1].v) == 1)</span><br><span class="line">{</span><br><span class="line">int t = a[i].x - a[i - 1].x;</span><br><span class="line">l = t &lt; l ? t : l;</span><br><span class="line">}</span><br><span class="line">if(a[1].v == 1)</span><br><span class="line">ans ++;</span><br><span class="line">for(int i = 2; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">if(a[i].v == 1 &amp;&amp; a[i - 1].v == 0)</span><br><span class="line">ans ++;</span><br><span class="line">else if(a[i].v + a[i - 1].v == 2) </span><br><span class="line">{</span><br><span class="line">if(a[i].x - a[i - 1].x &gt;= l)</span><br><span class="line">ans ++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.printf("%d", ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">class node implements Comparable<span class="tag">&lt;<span class="name">node</span>&gt;</span></span><br><span class="line">{</span><br><span class="line">int x, v;</span><br><span class="line">public node(int x, int v)</span><br><span class="line">{</span><br><span class="line">this.x = x;</span><br><span class="line">this.v = v;</span><br><span class="line">}</span><br><span class="line">public int compareTo(node o)</span><br><span class="line">{</span><br><span class="line">return x - o.x;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>疯狂的科学家</title>
      <link href="2022/02/15/feng-kuang-de-ke-xue-jia/"/>
      <url>2022/02/15/feng-kuang-de-ke-xue-jia/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p><a href="https://www.acwing.com/problem/content/1674/">1672. 疯狂的科学家 - AcWing题库</a></p><p>Farmer John 的远房亲戚 Ben 是一个疯狂的科学家。</p><p>通常这会在家庭聚会时造成不小的摩擦，但这偶尔也会带来些好处，尤其是当 Farmer John 发现他正面对一些有关他的奶牛们的独特而不寻常的问题时。</p><p>Farmer John 当前正面对一个有关她的奶牛们的独特而不寻常的问题。</p><p>他最近订购了 N 头奶牛，包含两种不同品种：荷斯坦牛和更赛牛。</p><p>他在订单中用一个长为 N 的字符串来指定奶牛，其中的字符为 H（表示荷斯坦牛）或 G（表示更赛牛）。</p><p>不幸的是，当这些奶牛到达他的农场，他给她们排队时，她们的品种组成的字符串与原先的不同。</p><p>我们将这两个字符串称为 A 和 B，其中 A 是 Farmer John 原先想要的品种字符组成的字符串，B 是他的奶牛们到达时组成的字符串。</p><p>Farmer John 并没有简单地检查重新排列 B 中的奶牛是否能得到 A，而是请他的远房亲戚 Ben 利用他的科学才华来解决这一问题。</p><p>经过数月的研究，Ben 发明了一台不同寻常的机器：奶牛品种转换机3000，能够选择任意奶牛组成的子串并反转她们的品种：在这个子串中的所有 H 变为 G，所有 G 变为 H。</p><p>Farmer John 想要求出将他当前的序列 B 变为他本来订购时想要的 A 需要使用这台机器的最小次数。</p><p>然而，Ben 的疯狂的科学家技能并不会处理开发奇异机器以外的事，所以你需要帮助 Farmer John 解决这个计算难题。</p><h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>输入的第一行包含 N，以下两行包含字符串 A 和 B。每个字符串均包含 N 个字符，字符均为 H 和 G 之一。</p><h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>输出将 B 变为 A 需要使用机器的最小次数。</p><h5 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h5><p>1≤N≤1000</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, ans = 0;</span><br><span class="line">static boolean f = false;</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">StringBuilder s = new StringBuilder(inScanner.next());</span><br><span class="line">StringBuilder s1 = new StringBuilder(inScanner.next());</span><br><span class="line">for(int i = 0; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line"></span><br><span class="line">if(!f &amp;&amp; s.charAt(i) != s1.charAt(i))</span><br><span class="line">{</span><br><span class="line">f = true;</span><br><span class="line">ans ++;</span><br><span class="line">}</span><br><span class="line">if(s.charAt(i) == s1.charAt(i))</span><br><span class="line">f = false;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">System.out.printf("%d", ans);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拍照</title>
      <link href="2022/02/14/pai-zhao/"/>
      <url>2022/02/14/pai-zhao/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p><a href="https://www.acwing.com/problem/content/1445/">1443. 拍照 - AcWing题库</a></p><p>农夫约翰在给他编号为 1…N 的 N 头奶牛排队拍照。</p><p>约翰一开始计划从左向右数第 i 个位置排编号为 ai 的奶牛，他在一张纸上写下了排列 a1,a2,…,aN。</p><p>不幸的是，这张纸刚刚被小偷偷走了！</p><p>幸好约翰仍然有机会恢复他之前写下的排列。</p><p>在这张纸被偷走之前，奶牛贝茜记录了序列 b1,b2,…,bN−1，对于每一个 1≤i&lt;N 满足 bi=ai+ai+1。</p><p>基于贝茜的信息，帮助约翰恢复可以产生序列 b 的“字典序最小”的排列 a。</p><p>排列 x 字典序小于排列 y，如果对于某个 j，对于所有 i&lt;j 均有 xi=yi，且有 xj&lt;yj（换句话说，这两个排列到某个位置之前都相同，在这个位置上 x 小于 y）。</p><p>保证存在至少一个满足条件的 a。</p><h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>输入的第一行包含一个整数 N。</p><p>第二行包含 N−1 个空格分隔的整数 b1,b2,…,bN−1。</p><h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>输出一行，包含 N 个空格分隔的整数 a1,a2,…,aN。</p><h5 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h5><p>2≤N≤103</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n;</span><br><span class="line">static boolean f = false;</span><br><span class="line">static int[] a = new int[1010];</span><br><span class="line">static int[] b = new int[1010];</span><br><span class="line">static boolean[] m = new boolean[1010];</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">for(int i = 1; i &lt; n; i ++)</span><br><span class="line">b[i] = inScanner.nextInt();</span><br><span class="line">inScanner.close();</span><br><span class="line">for(int i = 1; i &lt; b[1]; i ++)</span><br><span class="line">{</span><br><span class="line">Arrays.fill(m, false);</span><br><span class="line">m[i] = true;</span><br><span class="line">a[1] = i;</span><br><span class="line">for(int j = 2; j &lt;= n; j ++)</span><br><span class="line">{</span><br><span class="line">int t = b[j - 1] - a[j - 1];</span><br><span class="line">if(t &gt; 0 &amp;&amp; t &lt;= n &amp;&amp; !m[t])</span><br><span class="line">{</span><br><span class="line">m[t] = true;</span><br><span class="line">a[j] = t;</span><br><span class="line">f = true;</span><br><span class="line">}</span><br><span class="line">else </span><br><span class="line">{</span><br><span class="line">f = false;</span><br><span class="line">break;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">if(f)</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">System.out.printf("%d ", a[i]);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我在哪？</title>
      <link href="2022/02/12/wo-zai-na/"/>
      <url>2022/02/12/wo-zai-na/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p><a href="https://www.acwing.com/problem/content/1462/">1460. 我在哪？ - AcWing题库</a></p><p>农夫约翰出门沿着马路散步，但是他现在发现自己可能迷路了！</p><p>沿路有一排共 N 个农场。</p><p>不幸的是农场并没有编号，这使得约翰难以分辨他在这条路上所处的位置。</p><p>然而，每个农场都沿路设有一个彩色的邮箱，所以约翰希望能够通过查看最近的几个邮箱的颜色来唯一确定他所在的位置。</p><p>每个邮箱的颜色用 A..Z 之间的一个字母来指定，所以沿着道路的 N 个邮箱的序列可以用一个长为 N 的由字母 A..Z 组成的字符串来表示。</p><p>某些邮箱可能会有相同的颜色。</p><p>约翰想要知道最小的 K 的值，使得他查看任意连续 K 个邮箱序列，他都可以唯一确定这一序列在道路上的位置。</p><p>例如，假设沿路的邮箱序列为 ABCDABC 。</p><p>约翰不能令 K=3，因为如果他看到了 ABC，则沿路有两个这一连续颜色序列可能所在的位置。</p><p>最小可行的 K 的值为 K=4，因为如果他查看任意连续 4 个邮箱，那么可得到的连续颜色序列可以唯一确定他在道路上的位置。</p><h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>输入的第一行包含 N，第二行包含一个由 N 个字符组成的字符串，每个字符均在 A..Z 之内。</p><h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>输出一行，包含一个整数，为可以解决农夫约翰的问题的最小 K 值。</p><h5 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h5><p>1≤N≤100</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, ans;</span><br><span class="line">static String s;</span><br><span class="line">public static boolean check(int t)</span><br><span class="line">{</span><br><span class="line">for(int i = 0; i &lt;= n - t; i ++)</span><br><span class="line">{</span><br><span class="line">for(int j = i + 1; j &lt;= n - t; j ++)</span><br><span class="line">{</span><br><span class="line">boolean f = false;</span><br><span class="line">for(int k = 0; k &lt; t; k ++)</span><br><span class="line">{</span><br><span class="line">if(s.charAt(i + k) != s.charAt(j + k))</span><br><span class="line">{</span><br><span class="line">f = false;</span><br><span class="line">break;</span><br><span class="line">}</span><br><span class="line">f = true;</span><br><span class="line">}</span><br><span class="line">if(f)</span><br><span class="line">return true;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">return false;</span><br><span class="line">}</span><br><span class="line">public static int work()</span><br><span class="line">{</span><br><span class="line">int l = 1, r = n, mid;</span><br><span class="line">while(l &lt; r)</span><br><span class="line">{</span><br><span class="line">mid = (l + r) &gt;&gt; 1;</span><br><span class="line">if(check(mid))</span><br><span class="line">l = mid + 1;</span><br><span class="line">else</span><br><span class="line">r = mid;</span><br><span class="line">}</span><br><span class="line">return l;</span><br><span class="line">}</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">s = inScanner.next();</span><br><span class="line">inScanner.close();</span><br><span class="line">System.out.println(work());</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>牛奶工厂</title>
      <link href="2022/02/11/niu-nai-gong-han/"/>
      <url>2022/02/11/niu-nai-gong-han/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1473/">1471. 牛奶工厂 - AcWing题库</a></p><p>牛奶生意正红红火火！</p><p>农夫约翰的牛奶加工厂内有 N 个加工站，编号为 1…N，以及 N−1 条通道，每条连接某两个加工站。（通道建设很昂贵，所以约翰选择使用了最小数量的通道，使得从每个加工站出发都可以到达所有其他加工站）。</p><p>为了创新和提升效率，约翰在每条通道上安装了传送带。</p><p>不幸的是，当他意识到传送带是单向的已经太晚了，现在每条通道只能沿着一个方向通行了！</p><p>所以现在的情况不再是从每个加工站出发都能够到达其他加工站了。</p><p>然而，约翰认为事情可能还不算完全失败，只要至少还存在一个加工站 i 满足从其他每个加工站出发都可以到达加工站 i。</p><p>注意从其他任意一个加工站 j 前往加工站 i 可能会经过 i 和 j 之间的一些中间站点。</p><p>请帮助约翰求出是否存在这样的加工站 i。</p><p>输入格式<br>输入的第一行包含一个整数 N，为加工站的数量。</p><p>以下 N−1行每行包含两个空格分隔的整数 ai 和 bi，满足 1≤ai,bi≤N 以及 ai≠bi。</p><p>这表示有一条从加工站 ai 向加工站 bi 移动的传送带，仅允许沿从 ai 到 bi 的方向移动。</p><p>输出格式<br>如果存在加工站 i 满足可以从任意其他加工站出发都可以到达加工站 i，输出最小的满足条件的 i。</p><p>否则，输出 −1。</p><p>数据范围<br>1≤N≤100</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, m;</span><br><span class="line">static int[] pre = new int[110];</span><br><span class="line">public static int find(int k)</span><br><span class="line">{</span><br><span class="line">if(pre[k] != -1)</span><br><span class="line">{pre[k] = find(pre[k]);</span><br><span class="line">return pre[k];</span><br><span class="line">}</span><br><span class="line">return k;</span><br><span class="line">}</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">Arrays.fill(pre, -1);</span><br><span class="line">int ans = 0;</span><br><span class="line">for(int i = 1; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line">int x, y;</span><br><span class="line">x = inScanner.nextInt();</span><br><span class="line">y = inScanner.nextInt();</span><br><span class="line">pre[x] = y;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">if(pre[i] == -1)</span><br><span class="line">{</span><br><span class="line">ans = i;</span><br><span class="line">break;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">if(i != ans &amp;&amp; find(i) != ans)</span><br><span class="line">{</span><br><span class="line">ans = -1;</span><br><span class="line">break;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型植被恢复</title>
      <link href="2022/02/10/da-xing-zhi-bei-hui-fu/"/>
      <url>2022/02/10/da-xing-zhi-bei-hui-fu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/description/1686/">1684. 大型植被恢复 - AcWing题库</a></p><p>长时间的干旱使得 Farmer John 的 NN 块草地上牧草匮乏。</p><p>随着雨季即将到来，现在应当是重新种植的时候了。</p><p>在 Farmer John 的储物棚里有四个桶，每个桶里装着一种不同的草种。</p><p>他想要在每块草地上播种其中一种草。</p><p>作为一名奶农，Farmer John 想要确保他的每头奶牛都能得到丰富的食谱。</p><p>他的 MM 头奶牛每一头都有两块喜爱的草地，他想要确保这两块草地种植不同种类的草，从而每头奶牛都可以选择两种草。</p><p>已知每块草地最多被 44 头奶牛喜爱。</p><p>请帮助 Farmer John 选择每块草地所种的草的种类，使得所有奶牛的营养需求都得到满足。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入的第一行包含 NN 和 MM。</p><p>以下 MM 行，每行包含两个范围为 1…N1…N 的整数，为 Farmer John 的一头奶牛喜欢的两块草地。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出一个 NN 位数，每一位均为 1…41…4 之一，表示每一块草地上所种的草的种类。</p><p>第一位对应草地 11 的草的种类，第二位对应草地 22，以此类推。</p><p>如果有多种可行的解，只需输出所有解中最小的 NN 位数。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>2≤N≤1002≤N≤100,<br>1≤M≤150</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, m;</span><br><span class="line">static int[][] a = new int[110][110];</span><br><span class="line">static int[] ans = new int[110];</span><br><span class="line">static boolean[] f = new boolean[5];</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">m = inScanner.nextInt();</span><br><span class="line">for(int i = 1; i &lt;= m; i ++)</span><br><span class="line">{</span><br><span class="line">int x, y;</span><br><span class="line">x = inScanner.nextInt();</span><br><span class="line">y = inScanner.nextInt();</span><br><span class="line">a[x][y] = 1;</span><br><span class="line">a[y][x] = 1;</span><br><span class="line">}</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">Arrays.fill(f, false);</span><br><span class="line">for(int j = 1; j &lt;= n; j ++)</span><br><span class="line">{</span><br><span class="line">if(a[i][j] == 1)</span><br><span class="line">f[ans[j]] = true;</span><br><span class="line">}</span><br><span class="line">for(int j = 1; j &lt;= 4; j ++)</span><br><span class="line">{</span><br><span class="line">if(!f[j])</span><br><span class="line">{</span><br><span class="line">ans[i] = j;</span><br><span class="line">break;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">System.out.print(ans[i]);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>困牛排序</title>
      <link href="2022/02/09/kun-niu-pai-xu/"/>
      <url>2022/02/09/kun-niu-pai-xu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1698/">1696. 困牛排序 - AcWing题库</a></p><p>Farmer John 正在尝试将他的 N 头奶牛，方便起见编号为 1…N，在她们前往牧草地吃早餐之前排好顺序。</p><p>当前，这些奶牛以 p1,p2,p3,…,pN 的顺序排成一行，Farmer John 站在奶牛 p1 前面。</p><p>他想要重新排列这些奶牛，使得她们的顺序变为 1,2,3,…,N，奶牛 1 在 Farmer John 旁边。</p><p>今天奶牛们有些困倦，所以任何时刻都只有直接面向 Farmer John 的奶牛会注意听 Farmer John 的指令。</p><p>每一次他可以命令这头奶牛沿着队伍向后移动 k 步，k 可以是范围 1…N−1 中的任意数。</p><p>她经过的 k 头奶牛会向前移动，腾出空间使得她能够插入到队伍中这些奶牛之后的位置。</p><p>例如，假设 N=4，奶牛们开始时是这样的顺序：</p><p>FJ: 4, 3, 2, 1</p><p>唯一注意 FJ 指令的奶牛是奶牛 4。</p><p>当他命令她向队伍后移动 2 步之后，队伍的顺序会变成：</p><p>FJ: 3, 2, 4, 1</p><p>现在唯一注意 FJ 指令的奶牛是奶牛 3，所以第二次他可以给奶牛 3 下命令，如此进行直到奶牛们排好了顺序。</p><p>Farmer John 急欲完成排序，这样他就可以回到他的农舍里享用他自己的早餐了。</p><p>请帮助他求出将奶牛们排好顺序所需要的最小操作次数。</p><p>输入格式<br>输入的第一行包含 N。</p><p>第二行包含 N 个空格分隔的整数，p1,p2,p3,…,pN，表示奶牛们的起始顺序。</p><p>输出格式<br>输出一个整数，为 Farmer John 采用最佳策略可以将这 N 头奶牛排好顺序所需要的操作次数。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n;</span><br><span class="line">static int[] a = new int[110];</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">a[i] = inScanner.nextInt();</span><br><span class="line">int cnt = 0;</span><br><span class="line">a[n + 1] = 1000;</span><br><span class="line">for(int i = n; i &gt; 0; i --)</span><br><span class="line">{</span><br><span class="line">if(a[i] &gt; a[i + 1])</span><br><span class="line">break;</span><br><span class="line">cnt ++;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">System.out.println(n - cnt);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>桶列表</title>
      <link href="2022/02/08/tong-lie-biao/"/>
      <url>2022/02/08/tong-lie-biao/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1717/">1715. 桶列表 - AcWing题库</a></p><p>Farmer John 正在考虑改变他给奶牛挤奶的时候分配牛奶桶的方式。</p><p>他认为这最终能使得他使用数量更少的桶，然而他不清楚具体是多少，请帮助他！</p><p>Farmer John 有 N 头奶牛，方便起见编号为 1…N。</p><p>第 i 头奶牛需要从时刻 si 到时刻 ti 之间挤奶，并且挤奶过程中需要用到 bi 个桶。</p><p>多头奶牛可能在同一时刻都在挤奶；每个桶在每个时刻只能供一头奶牛使用。</p><p>也就是说，第 i 头奶牛在时刻 si 到时刻 ti 之间挤奶时，如果用到了某个桶，则该桶在这段时间不能被其他奶牛使用。</p><p>当然，这个桶在这段时间之外可以被其他奶牛所使用。</p><p>为了简化他的工作，FJ 保证在任一时刻，至多只有一头奶牛开始或是结束挤奶（也就是说，所有的 si 和 ti 各不相同）。</p><p>FJ 有一个储藏室，里面有依次编号为 1、2、3、…… 的桶。</p><p>在他的挤奶策略中，当某一头奶牛（比如说，奶牛 i）开始挤奶（在时刻 si），FJ 就跑到储藏室取出编号最小的 bi 个桶分配给第 i 头奶牛用来挤奶。</p><p>请求出 FJ 需要在储藏室中存放多少个桶才能使得他能够顺利地给所有奶牛挤奶。</p><p>输入格式<br>输入的第一行包含 N。</p><p>以下 N 行，每行描述了一头奶牛，包含三个空格分隔的数 si,ti,bi。</p><p>其中 si 和 ti 均为 1…1000 之间的整数，bi 为 1…10 之间的整数。</p><p>输出格式<br>输出一个整数，为 FJ 需要的桶的数量。</p><p>数据范围<br>1≤N≤100</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, ans = 0;</span><br><span class="line">static int[] a = new int[1100];</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">int s, t, b;</span><br><span class="line">s = inScanner.nextInt();</span><br><span class="line">t = inScanner.nextInt();</span><br><span class="line">b = inScanner.nextInt();</span><br><span class="line">a[s] += b;</span><br><span class="line">a[t + 1] -= b;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">int sum = 0;</span><br><span class="line">for(int i = 1; i &lt;= 1001; i ++)</span><br><span class="line">{</span><br><span class="line">sum += a[i];</span><br><span class="line">ans = sum &gt; ans ? sum : ans;</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>挤奶顺序</title>
      <link href="2022/02/07/ji-nai-shun-xu/"/>
      <url>2022/02/07/ji-nai-shun-xu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/description/1728/">1726. 挤奶顺序 - AcWing题库</a></p><p>Farmer John 有 N 头奶牛，编号为 1…N。</p><p>他每天都要给他的奶牛们挤奶。</p><p>奶牛的社会结构非常复杂，其结构有两个关键特性。</p><p>首先，有 M 头奶牛的地位等级分明，按照地位越高越早挤奶的规则，这些奶牛的相对挤奶顺序是固定的。</p><p>此外，有 K 头奶牛的具体挤奶顺序也是固定的，比方说，奶牛 4 必须在所有奶牛中的第二位挤奶。</p><p>幸运的是，Farmer John 总是能够以一种满足所有这些情况的顺序给他的奶牛们挤奶。</p><p>不幸的是，奶牛 1 最近生病了，所以 Farmer John 想要尽早给这头奶牛挤奶，使得她可以回到牛棚获得急需的休息。</p><p>请帮助 Farmer John 求出奶牛 1 可以在挤奶顺序中出现的最早位置。</p><p>输入格式<br>第一行包含 N，M，K，表示 Farmer John 有 N 头奶牛，其中 M 头形成了社会阶层，K 头需要在挤奶顺序中处于一个特定的位置。</p><p>下一行包含 M 个不同的整数 mi。在这一行出现的奶牛必须以与她们在这行出现的顺序相同的顺序进行挤奶。</p><p>下面 K 行，每行包含两个整数 ci 和 pi，表示奶牛 ci 一定要在第 pi 位进行挤奶。</p><p>输入数据保证在这些限制之下，Farmer John 能够建立一个符合要求的挤奶顺序。</p><p>输出格式<br>输出奶牛 1 可以在挤奶顺序中出现的最早位置。</p><p>数据范围<br>2≤N≤100,<br>1≤M,K&lt;N,<br>1≤mi,ci,pi≤N</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, m, k;</span><br><span class="line">static int[] a = new int[110];</span><br><span class="line">static int[] c = new int[110];</span><br><span class="line">static int[] f = new int[110];</span><br><span class="line">public static void work(int l, int r, int q)</span><br><span class="line">{</span><br><span class="line">while(r &gt;= l)</span><br><span class="line">{</span><br><span class="line">if(c[q] == -1)</span><br><span class="line">{</span><br><span class="line">c[q] = a[r];</span><br><span class="line">r --;</span><br><span class="line">}</span><br><span class="line">q --;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">m = inScanner.nextInt();</span><br><span class="line">k = inScanner.nextInt();</span><br><span class="line">boolean t = false;</span><br><span class="line">Arrays.fill(c, -1);</span><br><span class="line">for(int i = 1; i &lt;= m; i ++)</span><br><span class="line">{</span><br><span class="line">a[i] = inScanner.nextInt();</span><br><span class="line">if(a[i] == 1)</span><br><span class="line">t = true;</span><br><span class="line">}</span><br><span class="line">for(int i = 1; i &lt;= k; i ++)</span><br><span class="line">{</span><br><span class="line">int ci, pi;</span><br><span class="line">ci = inScanner.nextInt();</span><br><span class="line">pi = inScanner.nextInt();</span><br><span class="line">c[pi] = ci;</span><br><span class="line">f[ci] = pi;</span><br><span class="line">}</span><br><span class="line">int pre = 0;</span><br><span class="line">for(int i = 1; i &lt;= m; i ++)</span><br><span class="line">{</span><br><span class="line">if(f[a[i]] != 0)</span><br><span class="line">{</span><br><span class="line">work(pre + 1, i - 1, f[a[i]] - 1);</span><br><span class="line">pre = i;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">if(t)</span><br><span class="line">{</span><br><span class="line">int j = f[a[pre]] + 1;</span><br><span class="line">int i = pre + 1;</span><br><span class="line">while(i &lt;= m &amp;&amp; j &lt;= n)</span><br><span class="line">{</span><br><span class="line">if(c[j] == -1)</span><br><span class="line">{</span><br><span class="line">c[j] = a[i];</span><br><span class="line">i ++;</span><br><span class="line">}</span><br><span class="line">j ++;</span><br><span class="line">}</span><br><span class="line">for(i = 1; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">if(c[i] == 1)</span><br><span class="line">{</span><br><span class="line">System.out.println(i);</span><br><span class="line">break;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">else</span><br><span class="line">{</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">if(c[i] == -1)</span><br><span class="line">{</span><br><span class="line">System.out.println(i);</span><br><span class="line">break;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蹄球</title>
      <link href="2022/02/05/ti-qiu/"/>
      <url>2022/02/05/ti-qiu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/description/1740/">1738. 蹄球 - AcWing题库</a></p><p>为了准备即将到来的蹄球锦标赛，Farmer John 正在训练他的 N 头奶牛（方便起见，编号为 1…N）进行传球。</p><p>这些奶牛在牛棚一侧沿直线排列，第 i 号奶牛位于距离牛棚 xi 的地方。</p><p>每头奶牛都在不同的位置上。</p><p>在训练开始的时候，Farmer John 会将若干个球传给不同的奶牛。</p><p>当第 i 号奶牛接到球时，无论是从 Farmer John 或是从另一头奶牛传来的，她会将球传给最近的奶牛（如果有多头奶牛与她距离相同，她会将球传给这些奶牛中最左边的那头奶牛。）。</p><p>为了使所有奶牛都有机会练习到传球，Farmer John 想要确保每头奶牛都持球至少一次。</p><p>帮助他求出为了达到这一目的他开始时至少要传出的球的数量。</p><p>假设他在开始的时候能将球传给最适当的一组奶牛。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, ans = 0;</span><br><span class="line">static int[] a = new int[110];</span><br><span class="line">static int[] b = new int[110];</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">a[i] = inScanner.nextInt();</span><br><span class="line">Arrays.sort(a, 1, n + 1);</span><br><span class="line">for(int i = 1; i &lt; n; i ++)</span><br><span class="line">a[i] = a[i + 1] - a[i];</span><br><span class="line">for(int i = 2; i &lt; n; i ++)</span><br><span class="line">b[i] = a[i] &gt;= a[i - 1] ? 1 : -1;</span><br><span class="line">b[1] = -1;</span><br><span class="line">b[n] = 1;</span><br><span class="line">for(int i = 1; i &lt; n; i ++)</span><br><span class="line">if(b[i] &lt; 0 &amp;&amp; b[i + 1] &gt; 0)</span><br><span class="line">{</span><br><span class="line">ans ++;</span><br><span class="line">if(b[i - 1] &lt; 0 &amp;&amp; b [i + 2] &gt; 0)</span><br><span class="line">ans ++;</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">inScanner.close();</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>救生员</title>
      <link href="2022/02/04/jiu-sheng-yuan/"/>
      <url>2022/02/04/jiu-sheng-yuan/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1752/">1750. 救生员 - AcWing题库</a></p><p>农夫约翰为他的牛开设了一个游泳池，他认为这将帮助它们放松并产出更多的奶。</p><p>为了确保安全，他雇佣了 N 头奶牛作为救生员，每头奶牛的工作班次都是一段连续的时间。</p><p>为了简单起见，游泳池每天的开放时间从时刻 0 到时刻 1000。</p><p>每个奶牛的工作班次都可以用两个整数来描述，它们分别表示该奶牛工作班次的开始时刻和结束时刻。</p><p>例如，从时刻 t=4 开始工作并在时刻 t=7 结束工作的救生员，它的工作时间为三个时间单位（请注意，时间“段”两端的端点是时间轴上的“点”）。</p><p>不幸的是，由于资金紧张问题，约翰不得不解雇一头奶牛。</p><p>请问通过合理裁员，剩余救生员的工作班次仍然可以覆盖的最大时间有多长？</p><p>一个时间间隔内如果存在至少一名救生员当值，那么这个时间间隔就认为是被覆盖的。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, ans = 0;</span><br><span class="line">static boolean[] f = new boolean[1010];</span><br><span class="line">static node[] a = new node[110];</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">for(int i = 0; i &lt; n; i ++)</span><br><span class="line">a[i] = new node(inScanner.nextInt(), inScanner.nextInt());</span><br><span class="line">for(int i = 0; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line">Arrays.fill(f, false);</span><br><span class="line">int sum = 0;</span><br><span class="line">for(int j = 0; j &lt; n; j ++)</span><br><span class="line">{</span><br><span class="line">if(i != j)</span><br><span class="line">{</span><br><span class="line">int l = a[j].l;</span><br><span class="line">int r = a[j].r;</span><br><span class="line">while(l &lt; r)</span><br><span class="line">{</span><br><span class="line">if(!f[l])</span><br><span class="line">{</span><br><span class="line">f[l] = true;</span><br><span class="line">sum ++;</span><br><span class="line">}</span><br><span class="line">l ++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">ans = sum &gt; ans ? sum : ans;</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">inScanner.close();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">class node</span><br><span class="line">{</span><br><span class="line">int l, r;</span><br><span class="line">public node(int l, int r)</span><br><span class="line">{</span><br><span class="line">this.l = l;</span><br><span class="line">this.r = r;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>牛的洗牌</title>
      <link href="2022/02/03/niu-de-xi-pai/"/>
      <url>2022/02/03/niu-de-xi-pai/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1764/">1762. 牛的洗牌 - AcWing题库</a></p><p>农夫约翰坚信快乐的奶牛会产出更多的牛奶，因此他在谷仓中安装了一个巨大的迪斯科球，并计划教他的奶牛跳舞！</p><p>在查阅了一些牛的流行舞蹈后，约翰决定教他的奶牛“洗牌舞”。</p><p>洗牌舞是由他的 NN 只奶牛按一定顺序排成一行，然后连续执行三次“洗牌”，每次“洗牌”都可能会使奶牛重新排序。</p><p>为了让奶牛们更容易找到自己所处的位置，约翰用数字 1∼N1∼N 对一行中奶牛所在的位置进行了标记，一行中第一头奶牛处于位置 11，第二头奶牛处于位置 22，以此类推，直到位置 NN。</p><p>每次“洗牌”用 NN 个数字 a1,a2,…,aNa1,a2,…,aN 来描述，处于位置 ii 的奶牛在一次“洗牌”过后，需要移动至位置 aiai（因此，每个 aiai 在 1…N1…N 范围内）。</p><p>幸运的是，所有 aiai 都是互不相同的，因此，不会存在多头奶牛在洗牌结束后移动到同一个位置的情况。</p><p>约翰的每头奶牛都有一个属于自己的唯一 77 位整数 IDID （不含前导 00）。</p><p>给定你三轮“洗牌”过后的奶牛排列顺序，请你求出奶牛们的初始排列顺序。农夫约翰坚信快乐的奶牛会产出更多的牛奶，因此他在谷仓中安装了一个巨大的迪斯科球，并计划教他的奶牛跳舞！</p><p>在查阅了一些牛的流行舞蹈后，约翰决定教他的奶牛“洗牌舞”。</p><p>洗牌舞是由他的 N 只奶牛按一定顺序排成一行，然后连续执行三次“洗牌”，每次“洗牌”都可能会使奶牛重新排序。</p><p>为了让奶牛们更容易找到自己所处的位置，约翰用数字 1∼N 对一行中奶牛所在的位置进行了标记，一行中第一头奶牛处于位置 1，第二头奶牛处于位置 2，以此类推，直到位置 N。</p><p>每次“洗牌”用 N 个数字 a1,a2,…,aN 来描述，处于位置 i 的奶牛在一次“洗牌”过后，需要移动至位置 ai（因此，每个 ai 在 1…N 范围内）。</p><p>幸运的是，所有 ai 都是互不相同的，因此，不会存在多头奶牛在洗牌结束后移动到同一个位置的情况。</p><p>约翰的每头奶牛都有一个属于自己的唯一 7 位整数 ID （不含前导 0）。</p><p>给定你三轮“洗牌”过后的奶牛排列顺序，请你求出奶牛们的初始排列顺序。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n;</span><br><span class="line">static TreeMap&lt;Integer, Integer&gt; m = new TreeMap&lt;Integer, Integer&gt;();</span><br><span class="line">static int[] b = new int[1000];</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">m.put(inScanner.nextInt(), i);</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">int k = i;</span><br><span class="line">int j = 3;</span><br><span class="line">while(j --&gt; 0)</span><br><span class="line">k = m.get(k);</span><br><span class="line">b[k] = inScanner.nextInt();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">System.out.println(b[i]);</span><br><span class="line">inScanner.close();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>牛的基因组学</title>
      <link href="2022/02/03/niu-de-ji-yin-zu-xue/"/>
      <url>2022/02/03/niu-de-ji-yin-zu-xue/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1778/">1776. 牛的基因组学 - AcWing题库</a></p><p>农夫约翰拥有 N 头有斑点的牛和 N 头没有斑点的牛。</p><p>他刚刚完成了牛遗传学课程，他确信奶牛上的斑点是由牛基因组突变引起的。</p><p>农夫约翰花了大价钱对他的奶牛的基因组进行了测序。</p><p>每个基因组都是一个由四个字符 A,C,G,T 构成的长度为 M 的字符串。</p><p>当他统计得到的奶牛的基因组序列时，可以得到一个如下所示的表：（此时，N=3）</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">位置 :    1 2 3 4 5 6 7 ... M</span><br><span class="line"></span><br><span class="line">斑点牛 1: A A T C C C A ... T</span><br><span class="line">斑点牛 2: G A T T G C A ... A</span><br><span class="line">斑点牛 3: G G T C G C A ... A</span><br><span class="line"></span><br><span class="line">普通牛 1: A C T C C C A ... G</span><br><span class="line">普通牛 2: A C T C G C A ... T</span><br><span class="line">普通牛 3: A C T T C C A ... T</span><br></pre></td></tr></tbody></table></figure><p>通过仔细观察该表，他发现通过位置 2 的字符足以判断奶牛是否存在斑点。</p><p>也就是说，仅通过查看这个位置上的字符，农夫约翰就可以判断他的哪些奶牛有斑点，哪些没有斑点。（在这里，A 和 G 表示有斑点，C 表示无斑点，T 无关紧要，因为没有任何一头牛的第二个位置上的字符是 T）</p><p>位置 1 上的字符不足以判断奶牛是否存在斑点，因为 A 既可以表示有斑点也可以表示无斑点。</p><p>给定约翰的奶牛的基因组序列列表，请你计算可以单独用来判断奶牛是否存在斑点的位置的数量。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Main {</span><br><span class="line">static int N = 100010;</span><br><span class="line">static int n, m, ans = 0;</span><br><span class="line">static String[] q = new String[110];</span><br><span class="line">static TreeSet<span class="tag">&lt;<span class="name">Integer</span>&gt;</span>[] set = new TreeSet[110];</span><br><span class="line">public static boolean check(int k)</span><br><span class="line">{</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">int t = q[i].charAt(k) - 'A';</span><br><span class="line">if(set[k].contains(t))</span><br><span class="line">return false;</span><br><span class="line">}</span><br><span class="line">return true;</span><br><span class="line">}</span><br><span class="line">public static void main(String[] args) {</span><br><span class="line">Scanner inScanner = new Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">m = inScanner.nextInt();</span><br><span class="line">String s;</span><br><span class="line">for(int i = 0; i &lt; m; i ++)</span><br><span class="line">set[i] = new TreeSet<span class="tag">&lt;<span class="name">Integer</span>&gt;</span>();</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">s = inScanner.next();</span><br><span class="line">for(int j = 0; j &lt; m; j ++)</span><br><span class="line">set[j].add(s.charAt(j) - 'A');</span><br><span class="line">}</span><br><span class="line">for(int i = 1; i &lt;= n; i ++)</span><br><span class="line">q[i] = inScanner.next();</span><br><span class="line">for(int i = 0; i &lt; m; i ++)</span><br><span class="line">{</span><br><span class="line">if(check(i))</span><br><span class="line">ans ++;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>牛为什么过马路II</title>
      <link href="2022/02/03/niu-wei-shi-me-guo-ma-lu-ii/"/>
      <url>2022/02/03/niu-wei-shi-me-guo-ma-lu-ii/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1791/">1789. 牛为什么过马路 II - AcWing题库</a></p><p>农夫约翰的农场布局十分奇特，一条大型的环形道路将奶牛吃草的田地围了起来。</p><p>每天早晨，奶牛们穿过这条道路，进入到田地吃草；每天晚上，奶牛们穿过这条道路，离开田地，返回牛棚休息。</p><p>众所周知，奶牛是有习性的动物，每头奶牛每天通过道路的方式都相同。</p><p>每头奶牛每天固定地从道路的某一位置进入田地，从道路的另一不同位置离开田地。</p><p>所有奶牛的所有进出位置之间互不相同。</p><p>约翰共有 26 头奶牛，依次命名为 A∼Z。</p><p>因此，道路上共有 52 个不同的进出位置。</p><p>约翰沿着环形道路按顺时针方向扫描了每个位置，并记录了每个位置处经过的奶牛的名字，最终形成了一个包含 52 个字母的序列，A∼Z 中的每个字母恰好出现两次。</p><p>他并没有记录哪些位置是入口，哪些位置是出口。</p><p>看着地图上记录的这些位置，约翰想要知道一天当中，有多少对奶牛之间的从入口穿过田地到达出口的路径可能会存在交叉。</p><p>如果奶牛 A 从入口穿过田地到达出口的路径必须穿过奶牛 B 从入口穿过田地到达出口的路径，那么称这对牛 (A,B) 是“交叉”对。</p><p>请帮助约翰计算“交叉”对（不考虑顺序，即 (A,B) 与 (B,A) 视为同一对 ）的总数。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, ans = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> String s;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] sum = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">60</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">s = inScanner.next();</span><br><span class="line">n = s.length();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(s.charAt(i) == s.charAt(j))</span><br><span class="line">{</span><br><span class="line">ans += cnt;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> t = s.charAt(j) - <span class="string">'A'</span>;</span><br><span class="line">a[t] ++;</span><br><span class="line"><span class="keyword">if</span>(a[t] == <span class="number">1</span>)</span><br><span class="line">cnt ++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cnt --;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">Arrays.fill(a, <span class="number">0</span>);</span><br><span class="line">cnt = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">System.out.println(ans / <span class="number">2</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蹄子剪刀布</title>
      <link href="2022/01/29/ti-zi-jian-dao-bu/"/>
      <url>2022/01/29/ti-zi-jian-dao-bu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1803/">1801. 蹄子剪刀布 - AcWing题库</a></p><p>你可能听说过“石头剪刀布”的游戏。</p><p>这个游戏在牛当中同样流行，它们称之为“蹄子剪刀布”。</p><p>游戏的规则非常简单，两头牛相互对抗，数到三之后各出一个表示蹄子，剪刀或布的手势。</p><p>蹄子赢剪刀，剪刀赢布，布赢蹄子。</p><p>例如，第一头牛出“蹄子”手势，第二头牛出“布”手势，则第二头牛获胜。</p><p>如果两头牛出相同的手势，则算平局。</p><p>农夫约翰的两头奶牛正在进行 N 轮“蹄子剪刀布”对抗，他看的十分入迷。</p><p>不幸的是，虽然他可以看到奶牛正在做出三种不同类型的手势，但他却无法分辨出哪一个代表“蹄子”，哪一个代表“布”以及哪一个代表“剪刀”。</p><p>不知道这三种手势的具体含义的情况下，农夫约翰给这三种手势分配了编号 1,2,3。</p><p>手势 1 可能代表“蹄子”，可能代表“剪刀”，也可能代表“布”，反正他傻傻分不清楚。</p><p>给出两头奶牛在 N 场比赛中所做出的具体手势对应的编号，请你判断第一头奶牛最多可能赢多少盘对抗。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n --&gt; <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line">x = inScanner.nextInt();</span><br><span class="line">y = inScanner.nextInt();</span><br><span class="line">x --; </span><br><span class="line">y --;</span><br><span class="line"><span class="keyword">if</span>((x + <span class="number">1</span>) % <span class="number">3</span> == y)</span><br><span class="line">a ++;</span><br><span class="line"><span class="keyword">if</span>((y + <span class="number">1</span>) % <span class="number">3</span> == x)</span><br><span class="line">b ++;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">System.out.printf(<span class="string">"%d\n"</span>, Math.max(a, b));</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>方块游戏</title>
      <link href="2022/01/28/fang-kuai-you-xi/"/>
      <url>2022/01/28/fang-kuai-you-xi/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1815/">1813. 方块游戏 - AcWing题库</a></p><p>农夫约翰试图通过给奶牛一套通常用于学龄前儿童的 <code>N</code> 个拼写板来教他的奶牛阅读。</p><p>每个拼写板的每一侧都有一个单词和一个图画。</p><p>例如，一侧可能有单词 <code>cat</code> 和一只小猫，另一侧可能有单词 <code>dog</code> 和一只小狗。</p><p>因此，当所有拼写板放置到地面上时，会显示一组 <code>N</code> 个单词。</p><p>通过翻转其中一部分板子，就可以得到另一组 <code>N</code> 个单词。</p><p>为了帮助奶牛练习单词拼写，约翰想要制作一些木块，在每个木块上都印上一个字母，使得奶牛可以使用这些木块拼出看到的单词。</p><p>为了使得无论哪一组 <code>N</code> 个单词朝上显示，奶牛都能将其全部拼出，就需要印有各种字母的木块都足够的多。</p><p>例如，如果 <code>N=3</code> 且单词 <code>box,cat,car</code> 朝上显示，则奶牛至少需要一个 <code>b</code> 块，一个 <code>o</code> 块，一个 <code>x</code> 块，两个 <code>c</code> 块，两个 <code>a</code> 块，一个 <code>t</code> 块和一个 <code>r</code> 块。</p><p>请帮助约翰确定，印有每种字母的木块至少需要提供多少块，才能使得不管每个板子的哪一侧朝上显示，奶牛都可以拼出所有 <code>N</code> 个可见的单词。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] ans = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] sum = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] sum1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">String a;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">a = inScanner.next();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a.length(); j ++)</span><br><span class="line">sum[a.charAt(j) - <span class="string">'a'</span>] ++;</span><br><span class="line">a = inScanner.next();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; a.length(); j ++)</span><br><span class="line">sum1[a.charAt(j) - <span class="string">'a'</span>] ++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">26</span>; j ++)</span><br><span class="line">{</span><br><span class="line">ans[j] += Math.max(sum[j], sum1[j]);</span><br><span class="line">sum[j] = sum1[j] = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i ++)</span><br><span class="line">System.out.printf(<span class="string">"%d\n"</span>, ans[i]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>农田缩减</title>
      <link href="2022/01/27/nong-tian-suo-jian/"/>
      <url>2022/01/27/nong-tian-suo-jian/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1828/">1826. 农田缩减 - AcWing题库</a></p><p>农夫约翰的 <code>N</code> 头奶牛分布在其二维农场的不同位置。</p><p>约翰想用一个长方形的围栏把所有的奶牛围起来，围栏的边需要平行于 <code>x</code> 轴和 <code>y</code> 轴。</p><p>在能够包含所有奶牛的情况下（处于围栏边界的奶牛也算包含在内），约翰希望围栏围起的面积尽可能小。</p><p>不幸的是，由于上个季度的牛奶产量很低，约翰的预算十分紧张。</p><p>因此，他希望建立一个更小的围栏，甚至为了实现这一目标，他愿意卖掉农场中的一头奶牛。</p><p>请帮助约翰计算，卖掉牛群中的一头奶牛以后，他可以用围栏围起来的最小面积（为剩下的奶牛建造尽可能小的围栏）。</p><p>对于这个问题，请将奶牛视为点，将围栏视为四个线段的集合。</p><p>注意，答案可以是零，例如，所有剩余的奶牛最终都站在同一条垂直或水平线上。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, x, y;</span><br><span class="line"><span class="keyword">static</span> node min_x, premin_x;</span><br><span class="line"><span class="keyword">static</span> node max_x, premax_x;</span><br><span class="line"><span class="keyword">static</span> node min_y, premin_y;</span><br><span class="line"><span class="keyword">static</span> node max_y, premax_y;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">minx</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(x &lt; min_x.v)</span><br><span class="line">{</span><br><span class="line">premin_x.key = min_x.key;</span><br><span class="line">premin_x.v = min_x.v;</span><br><span class="line">min_x.key = key;</span><br><span class="line">min_x.v = x;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x &lt; premin_x.v)</span><br><span class="line">{</span><br><span class="line">premin_x.key = key;</span><br><span class="line">premin_x.v = x;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">maxx</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(x &gt; max_x.v)</span><br><span class="line">{</span><br><span class="line">premax_x.key = max_x.key;</span><br><span class="line">premax_x.v = max_x.v;</span><br><span class="line">max_x.key = key;</span><br><span class="line">max_x.v = x;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x &gt; premax_x.v)</span><br><span class="line">{</span><br><span class="line">premax_x.key = key;</span><br><span class="line">premax_x.v = x;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">miny</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(y &lt; min_y.v)</span><br><span class="line">{</span><br><span class="line">premin_y.key = min_y.key;</span><br><span class="line">premin_y.v = min_y.v;</span><br><span class="line">min_y.key = key;</span><br><span class="line">min_y.v = y;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(y &lt; premin_y.v)</span><br><span class="line">{</span><br><span class="line">premin_y.key = key;</span><br><span class="line">premin_y.v = y;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">maxy</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(y &gt; max_y.v)</span><br><span class="line">{</span><br><span class="line">premax_y.key = max_y.key;</span><br><span class="line">premax_y.v = max_y.v;</span><br><span class="line">max_y.key = key;</span><br><span class="line">max_y.v = y;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(y &gt; premax_y.v)</span><br><span class="line">{</span><br><span class="line">premax_y.key = key;</span><br><span class="line">premax_y.v = y;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">min_x = <span class="keyword">new</span> node(<span class="number">0</span>, Integer.MAX_VALUE);</span><br><span class="line">premin_x = <span class="keyword">new</span> node(<span class="number">0</span>, Integer.MAX_VALUE);</span><br><span class="line">min_y = <span class="keyword">new</span> node(<span class="number">0</span>, Integer.MAX_VALUE);</span><br><span class="line">premin_y = <span class="keyword">new</span> node(<span class="number">0</span>, Integer.MAX_VALUE);</span><br><span class="line"></span><br><span class="line">max_x = <span class="keyword">new</span> node(<span class="number">0</span>, Integer.MIN_VALUE);</span><br><span class="line">premax_x = <span class="keyword">new</span> node(<span class="number">0</span>, Integer.MIN_VALUE);</span><br><span class="line">max_y = <span class="keyword">new</span> node(<span class="number">0</span>, Integer.MIN_VALUE);</span><br><span class="line">premax_y = <span class="keyword">new</span> node(<span class="number">0</span>, Integer.MIN_VALUE);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">x = inScanner.nextInt();</span><br><span class="line">y = inScanner.nextInt();</span><br><span class="line">minx(x, i);</span><br><span class="line">miny(y, i);</span><br><span class="line">maxx(x, i);</span><br><span class="line">maxy(y, i);</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">int</span> lx = premin_x.v - min_x.v;</span><br><span class="line"><span class="keyword">int</span> rx = max_x.v - premax_x.v;</span><br><span class="line"><span class="keyword">int</span> ly = premin_y.v - min_y.v;</span><br><span class="line"><span class="keyword">int</span> ry = max_y.v - premax_y.v;</span><br><span class="line"><span class="keyword">if</span>(lx &gt;= rx &amp;&amp; lx &gt;= ly &amp;&amp; lx &gt;= ry)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(min_x.key == min_y.key)</span><br><span class="line">min_y.v = premin_y.v;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(min_x.key == max_y.key)</span><br><span class="line">max_y.v = premax_y.v;</span><br><span class="line">min_x.v = premin_x.v;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(rx &gt;= lx &amp;&amp; rx &gt;= ly &amp;&amp; rx &gt;= ry)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(max_x.key == min_y.key)</span><br><span class="line">min_y.v = premin_y.v;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(max_x.key == max_y.key)</span><br><span class="line">max_y.v = premax_y.v;</span><br><span class="line">max_x.v = premax_x.v;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(ly &gt;= lx &amp;&amp; ly &gt;= rx &amp;&amp; ly &gt;= ry)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(min_y.key == min_x.key)</span><br><span class="line">min_x.v = premin_x.v;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(min_y.key == max_x.key)</span><br><span class="line">max_x.v = premax_x.v;</span><br><span class="line">min_y.v = premin_y.v;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(max_y.key == min_x.key)</span><br><span class="line">min_x.v = premin_x.v;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(max_y.key == max_x.key)</span><br><span class="line">max_x.v = premax_x.v;</span><br><span class="line">max_y.v = premax_y.v;</span><br><span class="line">}</span><br><span class="line">System.out.println((max_x.v - min_x.v) * (max_y.v - min_y.v));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">node</span></span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="keyword">int</span> v, key;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">this</span>.v = v;</span><br><span class="line"><span class="keyword">this</span>.key = key;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圆形牛棚</title>
      <link href="2022/01/26/yuan-xing-niu-peng/"/>
      <url>2022/01/26/yuan-xing-niu-peng/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1845/">1843. 圆形牛棚 - AcWing题库</a></p><p>作为当代建筑的爱好者，农夫约翰建造了一个完美圆环形状的新牛棚。</p><p>牛棚内部有 <code>n</code> 个房间，围成一个环形，按顺时针编号为 <code>1∼n</code>。</p><p>每个房间都既有通向相邻两个房间的门，也有通向牛棚外部的门。</p><p>约翰想让第 <code>i</code> 个房间内恰好有 <code>ri</code> 头牛。</p><p>为了让奶牛们有序的进入牛棚，他计划打开一个外门，让牛从该门进入。</p><p>然后，每头牛顺时针穿过房间，直到到达合适的房间为止。</p><p>约翰希望通过合理选择打开的门，使得所有奶牛的行走距离之和尽可能小（这里只考虑每头牛进入牛棚以后的行走距离）。</p><p>请确定他的奶牛需要行走的最小总距离。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, ans = Integer.MAX_VALUE;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">a[i] = inScanner.nextInt();</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j ++)</span><br><span class="line">sum += j * a[(i + j) % n];</span><br><span class="line">ans = Math.min(sum, ans);</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>愤怒的奶牛</title>
      <link href="2022/01/25/fen-nu-de-niu/"/>
      <url>2022/01/25/fen-nu-de-niu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1857/">1855. 愤怒的奶牛 - AcWing题库</a></p><p>奶牛贝茜设计了一款她认为必火的游戏：愤怒的奶牛。</p><p>游戏设定（她坚信这是她的原创）是玩家用一个弹弓将一头奶牛射向一个数轴，数轴的不同位置上分布着一些干草捆。</p><p>奶牛以足够的力量砸向某个干草捆，并使得该干草捆发生爆炸，爆炸可能会不断引起连锁反应，导致更多的干草捆发生爆炸。</p><p>目标是用一头奶牛引起的连锁反应引爆尽可能多的干草捆。</p><p>共有 <code>N</code> 个干草捆位于数轴中的不同整数位置，其坐标依次为 <code>x1,x2,…,xN</code>。</p><p>如果将奶牛射向位于位置 <code>x</code> 的干草捆，则该干草捆发生爆炸，爆炸半径为 <code>1</code>，爆炸将吞噬 1 单位距离内的所有干草捆。</p><p>然后这些干草捆（全部同时）发生爆炸，每个干草捆的爆炸半径为 <code>2</code>。</p><p>二次爆炸中吞噬的所有尚未爆炸的干草捆也（全部同时）发生爆炸，爆炸半径为 <code>3</code>。</p><p>也就是说，在 t 时刻爆炸的干草捆的爆炸半径为 <code>t</code>，其爆炸波及的干草捆在 <code>t+1</code> 时刻也会爆炸，爆炸半径为 <code>t+1</code>，以此类推。</p><p>请确定，通过合理选择奶牛射向的干草捆，能够引爆的干草捆最大数量。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bfsl</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(i &lt;= <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> tl = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">int</span> j = i - <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">while</span>(j &gt; <span class="number">0</span>&amp;&amp; a[i] - a[j] &lt;= len)</span><br><span class="line">{</span><br><span class="line">j --;</span><br><span class="line">tl ++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(tl == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">tl += bfsl(j + <span class="number">1</span>, len + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> tl;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bfsr</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(i &gt;= n)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> tr = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">int</span> j = i + <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">while</span>(j &lt;= n&amp;&amp; a[j] - a[i] &lt;= len)</span><br><span class="line">{</span><br><span class="line">j ++;</span><br><span class="line">tr ++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(tr == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">tr += bfsr(j - <span class="number">1</span>, len + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> tr;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">a[i] = inScanner.nextInt();</span><br><span class="line">inScanner.close();</span><br><span class="line">Arrays.sort(a, <span class="number">1</span>, n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> l = bfsl(i, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> r = bfsr(i, <span class="number">1</span>);</span><br><span class="line">ans = Math.max(ans, l + r + <span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贝茜的报复</title>
      <link href="2022/01/25/bei-qian-de-bao-fu/"/>
      <url>2022/01/25/bei-qian-de-bao-fu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1877/">1875. 贝茜的报复 - AcWing题库</a></p><p>农夫约翰和奶牛贝茜喜欢在业余时间互相出数学题。</p><p>约翰给贝茜出了一道相当难的问题，导致她没能解决。</p><p>现在，她希望通过给约翰出一道有挑战性的难题来报复他。</p><p>贝茜给了约翰一个表达式 <code>(B+E+S+S+I+E)(G+O+E+S)(M+O+O)</code>，其中包含七个变量 <code>B,E,S,I,G,O,M</code>（<code>O</code>是变量，不是零）。</p><p>对于每个变量，她给约翰一个列表，表中包含该变量可采用的最多 <code>20</code> 个整数值。</p><p>她要求约翰计算，共有多少种给变量赋值的方法可以使得表达式的计算结果为偶数。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> Map&lt;String, Integer&gt;[] m = <span class="keyword">new</span> Map[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">static</span> String q = <span class="string">"BESIGOM"</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> cnt = -<span class="number">1</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] num = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(cnt == <span class="number">6</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>((num[<span class="number">0</span>] + num[<span class="number">3</span>]) * (num[<span class="number">4</span>] + num[<span class="number">5</span>] + num[<span class="number">1</span>] + num[<span class="number">2</span>]) * num[<span class="number">6</span>] % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> M = m[num[<span class="number">6</span>]].getOrDefault(<span class="string">"M"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> O = m[num[<span class="number">5</span>]].getOrDefault(<span class="string">"O"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> G = m[num[<span class="number">4</span>]].getOrDefault(<span class="string">"G"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> I = m[num[<span class="number">3</span>]].getOrDefault(<span class="string">"I"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> S = m[num[<span class="number">2</span>]].getOrDefault(<span class="string">"S"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> E = m[num[<span class="number">1</span>]].getOrDefault(<span class="string">"E"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> B = m[num[<span class="number">0</span>]].getOrDefault(<span class="string">"B"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> sum = M * O * G * I * S * E * B;</span><br><span class="line">ans += sum;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//for(int i = 0; i &lt; 7; i ++)</span></span><br><span class="line"><span class="comment">//System.out.print(num[i]);</span></span><br><span class="line"><span class="comment">//System.out.println();</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line">cnt ++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1</span>; i ++)</span><br><span class="line">{</span><br><span class="line">num[cnt] = i;</span><br><span class="line">bfs();</span><br><span class="line">}</span><br><span class="line">cnt --;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">m[<span class="number">0</span>] = <span class="keyword">new</span> TreeMap&lt;String, Integer&gt;();</span><br><span class="line">m[<span class="number">1</span>] = <span class="keyword">new</span> TreeMap&lt;String, Integer&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">String s = inScanner.next();</span><br><span class="line"><span class="keyword">int</span> v = inScanner.nextInt();</span><br><span class="line"><span class="keyword">int</span> t = Math.abs(v) % <span class="number">2</span>;</span><br><span class="line">m[t].put(s, m[t].getOrDefault(s, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">bfs();</span><br><span class="line">System.out.print(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>COW</title>
      <link href="2022/01/24/cow/"/>
      <url>2022/01/24/cow/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1886/">1884. COW - AcWing题库</a></p><p>奶牛贝茜在她最喜欢的牧场中发现了一块石碑，上面刻有神秘的碑文。</p><p>碑文的文字似乎来自一种神秘的古代语言，可看作一个只包含 <code>C,O,W</code> 三种字符的字符串。</p><p>尽管贝茜无法解密该文字，但是她很欣赏 <code>C,O,W</code> 按顺序构成她最喜欢的单词 <code>COW</code>。</p><p>她想知道 <code>COW</code> 在碑文中一共出现了多少次。</p><p>她不介意 <code>C,O,W</code> 之间是否存在其他字符，只要这三个字符按正确的顺序出现即可。</p><p>她也不介意多个不同的 <code>COW</code> 是否共享了一些字符。</p><p>例如，<code>COW</code> 在 <code>CWOW</code> 中只出现一次，在 <code>CCOW</code> 中出现两次，在<code>CCOOWW</code> 中出现八次。</p><p>给定碑文中的文字，请帮助贝茜计算 COW 出现的次数。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">String s = inScanner.next();</span><br><span class="line"><span class="keyword">long</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">char</span> t = s.charAt(i);</span><br><span class="line"><span class="keyword">if</span>(t == <span class="string">'C'</span>)</span><br><span class="line">a ++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t == <span class="string">'O'</span>)</span><br><span class="line">b += a;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">c += b;</span><br><span class="line">}</span><br><span class="line">System.out.println(c);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奶牛慢跑</title>
      <link href="2022/01/24/nai-niu-man-pao/"/>
      <url>2022/01/24/nai-niu-man-pao/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1906/">1904. 奶牛慢跑 - AcWing题库</a></p><p>奶牛们又出去锻炼蹄子去了！</p><p>有 <code>N</code> 头奶牛在无限长的单行道上慢跑，且跑步方向为坐标值增大的方向。</p><p>每头奶牛在跑道上开始奔跑的位置互不相同，一些奶牛的奔跑速度可能相同，也可能不同。</p><p>由于跑道是单行道，十分狭窄，奶牛们无法相互超越。</p><p>当一头速度很快的牛追上另一头牛时，她必须减速至与另一头牛速度相同以免发生碰撞，并成为同一跑步小组的一员。此时，两头牛可以视为在同一点上。</p><p>最终，再也没有奶牛会撞到（追上）其他奶牛了。</p><p>约翰想知道在这种情况下，会剩下多少个跑步小组。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> node[] q = <span class="keyword">new</span> node[N];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">q[i] = <span class="keyword">new</span> node(inScanner.nextInt(), inScanner.nextInt());</span><br><span class="line">inScanner.close();</span><br><span class="line">Arrays.sort(q, <span class="number">1</span>, n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">1</span>, pre = q[<span class="number">1</span>].y;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(q[i].y &lt;= pre)</span><br><span class="line">{</span><br><span class="line">pre = q[i].y;</span><br><span class="line">ans ++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">node</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">node</span>&gt;</span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">this</span>.x = x;</span><br><span class="line"><span class="keyword">this</span>.y = y;</span><br><span class="line">}</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(node o)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> o.x - x;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公平摄影</title>
      <link href="2022/01/22/gong-ping-she-ying/"/>
      <url>2022/01/22/gong-ping-she-ying/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1915/">1913. 公平摄影 - AcWing题库</a></p><p>农夫约翰的 <code>N</code> 头奶牛站在一维长围栏的不同位置。</p><p>第 <code>i</code> 头牛位于位置 <code>xi</code>，其所属品种为 <code>bi</code>（根西岛牛或荷斯坦牛）。</p><p>所有奶牛的位置各不相同。</p><p>约翰想给一段连续区间内的奶牛拍摄一张照片，用来在乡村集市上展览。</p><p>但是我们希望他所有品种的奶牛都能在照片中得到公平的展示。</p><p>因此，他希望确保无论照片中出现哪些品种的奶牛，每种品种的奶牛在照片中的数量都必须相等。</p><p>例如，一张照片中只包含荷斯坦牛是可以的，包含荷斯坦牛和根西岛牛各 <code>27</code> 头也没问题，但是包含 <code>10</code> 头荷斯坦牛和 <code>9</code> 头根西岛牛则不可以。</p><p>请确定，约翰可以拍下的满足以上条件的照片的最大尺寸。</p><p>照片的尺寸是指照片中奶牛最大和最小位置之间的差。</p><p>约翰最终可能只拍下一头奶牛，这种情况下，照片尺寸为 <code>0</code>。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> node[] q = <span class="keyword">new</span> node[N];</span><br><span class="line"><span class="keyword">static</span> TreeMap&lt;Integer, Integer&gt; m = <span class="keyword">new</span> TreeMap&lt;&gt;();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x = inScanner.nextInt();</span><br><span class="line">String s;</span><br><span class="line">s = inScanner.next();</span><br><span class="line"><span class="keyword">if</span>(s.equals(<span class="string">"G"</span>))</span><br><span class="line">q[i] = <span class="keyword">new</span> node(x, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">q[i] = <span class="keyword">new</span> node(x, -<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">Arrays.sort(q, <span class="number">1</span>, n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>, sum = <span class="number">0</span>, pre = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!m.containsKey(sum))</span><br><span class="line">m.put(sum, q[i].x);</span><br><span class="line">sum += q[i].y;</span><br><span class="line"><span class="keyword">if</span>(m.containsKey(sum))</span><br><span class="line">ans = Math.max(ans, q[i].x - m.get(sum));</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">1</span> || q[i].y != q[i - <span class="number">1</span>].y)  </span><br><span class="line">pre = q[i].x;</span><br><span class="line">ans = Math.max(ans, q[i].x - pre);</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">node</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">node</span>&gt;</span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">this</span>.x = x;</span><br><span class="line"><span class="keyword">this</span>.y = y;</span><br><span class="line">}</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(node o)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> x - o.x;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>懒惰的牛</title>
      <link href="2022/01/22/lan-duo-de-niu/"/>
      <url>2022/01/22/lan-duo-de-niu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1924/">1922. 懒惰的牛 - AcWing题库</a></p><p>这是一个炎热的夏日。</p><p>懒洋洋的奶牛贝茜想将自己放置在田野中的某个位置，以便可以在短距离内尽可能多地吃到美味的草。</p><p>贝茜所在的田野中共有 <code>N</code> 片草地，我们可以将田野视作一个一维数轴。</p><p>第 <code>i</code> 片草地中包含 <code>gi</code> 单位的青草，位置坐标为 <code>xi</code>。</p><p>不同草地的位置不同。</p><p>贝茜想选取田野中的某个点作为她的初始位置（可能是某片草地所在的点）。</p><p>只有一片草地与她的初始位置的距离不超过 <code>K</code> 时，贝茜才能吃到那片草地上的草。</p><p>如果贝茜选择最佳初始位置，请确定她可以吃到的青草最大数量。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, k, len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] sum = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">k = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> g = inScanner.nextInt();</span><br><span class="line"><span class="keyword">int</span> x = inScanner.nextInt();</span><br><span class="line">a[x + <span class="number">1</span>] = g;</span><br><span class="line">len = Math.max(x + <span class="number">1</span>, len);</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">sum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i ++)</span><br><span class="line">sum[i] = sum[i - <span class="number">1</span>] + a[i];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> l = Math.max(<span class="number">0</span>, i - k - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> r = Math.min(len, i + k);</span><br><span class="line">ans = Math.max(ans, sum[r] - sum[l]);</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4 3</span></span><br><span class="line"><span class="comment">4 7</span></span><br><span class="line"><span class="comment">10 15</span></span><br><span class="line"><span class="comment">2 2</span></span><br><span class="line"><span class="comment">5 1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>镜子田地</title>
      <link href="2022/01/21/jing-zi-tian-di/"/>
      <url>2022/01/21/jing-zi-tian-di/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1931/">1929. 镜子田地 - AcWing题库</a></p><p>农夫约翰在屋子外面放了一些旧镜子，他的奶牛们像往常一样调皮地偷走了它们！</p><p>奶牛们将镜子放置在了一个矩形田地中，该田地可被划分为 <code>N×M</code> 个方格区域。</p><p>在每个方格区域中，奶牛在其某对对角之间放置一个双面镜，因此，共有两种放法，一种为 <code>/</code> 放置（镜子连接方格左下角和右上角），另一种为 <code>\</code> 放置（镜子连接方格左上角和右下角）。</p><p>一天晚上，奶牛贝茜将激光发射器带到了该田地中。</p><p>她站在田地外面，沿着田地的行或列水平或垂直照射光束，使光束反射一定数量的镜子。</p><p>由于镜子都是沿对角线摆放，因此经反射镜反射的水平光束最终将垂直传播，反之亦然。</p><p>贝茜想知道从田地之外射入的水平或垂直光束最多可以在田地中被反射多少次。</p><p>给定镜子田地的布局，请帮助贝茜计算这个数字。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">static</span> String[] s = <span class="keyword">new</span> String[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] dx = {-<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] dy = {<span class="number">0</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>};</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(x &lt; <span class="number">1</span> || x &gt; n || y &lt; <span class="number">0</span> || y &gt;= m)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(s[x].charAt(y) == <span class="string">'/'</span>)</span><br><span class="line">d ^= <span class="number">3</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">d ^= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> bfs(x + dx[d], y + dy[d], d) + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">m = inScanner.nextInt();</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">s[i] = inScanner.next();</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">ans = Math.max(ans, bfs(i, <span class="number">0</span>, <span class="number">3</span>));</span><br><span class="line">ans = Math.max(ans, bfs(i, m - <span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i ++)</span><br><span class="line">{</span><br><span class="line">ans = Math.max(ans, bfs(<span class="number">1</span>, i, <span class="number">2</span>));</span><br><span class="line">ans = Math.max(ans, bfs(n, i, <span class="number">0</span>));</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">3 3</span></span><br><span class="line"><span class="comment">/\\</span></span><br><span class="line"><span class="comment">\\\</span></span><br><span class="line"><span class="comment">/\/</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奶牛棒球</title>
      <link href="2022/01/21/nai-niu-bang-qiu/"/>
      <url>2022/01/21/nai-niu-bang-qiu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/description/1947/">1945. 奶牛棒球 - AcWing题库</a></p><p>农夫约翰的 <code>N</code> 头奶牛排成一排，每头奶牛都位于数轴中的不同位置上。</p><p>它们正在练习投掷棒球。</p><p>农夫约翰观看时，观察到一组三头牛 <code>(X,Y,Z)</code> 完成了两次成功的投掷。</p><p>牛 XX 把球扔给她右边的牛 <code>Y</code>，然后牛 <code>Y</code> 把球扔给她右边的牛 <code>Z</code>。</p><p>约翰指出，第二次投掷的距离不少于第一次投掷的距离，也不超过第一次投掷的距离的两倍。</p><p>请计算共有多少组牛 <code>(X,Y,Z)</code> 可能是约翰所看到的。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">a[i] = inScanner.nextInt();</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">inScanner.close();</span><br><span class="line">Arrays.sort(a, <span class="number">1</span>, n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i + <span class="number">1</span> &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>, l = j + <span class="number">1</span>, r = j + <span class="number">1</span>; j &lt; n; j ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> t = a[j] - a[i];</span><br><span class="line"><span class="keyword">while</span>(l &lt;= n &amp;&amp; t &gt; a[l] - a[j]) l ++;</span><br><span class="line"><span class="keyword">while</span>(r &lt;= n &amp;&amp; a[r] - a[j] &lt;= <span class="number">2</span> * t) r ++;</span><br><span class="line">ans += r - l;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">7</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闪烁</title>
      <link href="2022/01/20/shan-shuo/"/>
      <url>2022/01/20/shan-shuo/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1962/">1960. 闪烁 - AcWing题库</a></p><p>农夫约翰对牛棚里昏暗的灯光感到不满，刚刚安装了一个新吊灯。</p><p>新吊灯由 <code>N</code> 个灯泡组成，这 <code>N</code> 个灯泡围成一圈，编号为 <code>0∼N−1</code>。</p><p>奶牛对这个新吊灯非常着迷，并且喜欢玩以下游戏：</p><p>对于第 <code>i</code> 个灯泡，如果在 <code>T−1</code> 时刻，它左侧的灯泡（当 <code>i&gt;0</code> 时，为第 <code>i−1</code> 个灯泡；当 <code>i=0</code> 时，为第 <code>N−1</code> 个灯泡）是开着，那么在 <code>T</code> 时刻，就切换这个灯泡的状态。</p><p>这个游戏将持续 <code>B</code> 单位时间。</p><p>给定灯泡的初始状态，请确定在 <code>B</code> 单位时间后，它们的最终状态。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">long</span> k;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1000100</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> j = (i - <span class="number">1</span> + n) % n;</span><br><span class="line"><span class="keyword">int</span> x = t &gt;&gt; i &amp; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> y = t &gt;&gt; j &amp; <span class="number">1</span>;</span><br><span class="line">sum |= (x ^ y) &lt;&lt; i;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">System.out.println(t &gt;&gt; i &amp; <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">k = inScanner.nextLong();</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> t = inScanner.nextInt();</span><br><span class="line">sum = sum | t &lt;&lt; i;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">Arrays.fill(a, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; ; i ++)</span><br><span class="line">{</span><br><span class="line">sum = update(sum);</span><br><span class="line"><span class="keyword">if</span>(i == k)</span><br><span class="line">{</span><br><span class="line">print(sum);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[sum] == <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">a[sum] = i;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> l = i - a[sum];</span><br><span class="line"><span class="keyword">int</span> r = (<span class="keyword">int</span>) ((k - i) % l);</span><br><span class="line"><span class="keyword">while</span>(r-- &gt; <span class="number">0</span>)</span><br><span class="line">sum = update(sum);</span><br><span class="line">print(sum);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">5 6</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>金发姑娘和N头牛</title>
      <link href="2022/01/20/jin-fa-gu-niang-he-n-tou-niu/"/>
      <url>2022/01/20/jin-fa-gu-niang-he-n-tou-niu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/description/1954/">1952. 金发姑娘和 N 头牛 - AcWing题库</a></p><p>你可能听过关于金发姑娘和三只熊的经典故事。</p><p>然而，鲜为人知的是，金发姑娘最终成了一个农民。</p><p>在她的农场中，她的牛棚里有 N 头奶牛。</p><p>不幸的是，她的奶牛对温度相当敏感。</p><p>对于奶牛 i，使其感到舒适的温度为 Ai…Bi。</p><p>如果金发姑娘将牛棚的恒温器的温度 TT 设置为 T&lt;Ai，奶牛就会觉得冷，并会产出 X 单位的牛奶。</p><p>如果她将恒温器的温度 T 设置在 Ai≤T≤Bi，奶牛就会感到舒适，并会产出 Y 单位的牛奶。</p><p>如果她将恒温器的温度 TT 设置为 T&gt;Bi，奶牛就会觉得热，并会产出 Z 单位的牛奶。</p><p>正如所期望的那样，Y 的值始终大于 X 和 Z。</p><p>给定 X,Y,Z 以及每头奶牛感到舒适的温度范围，请计算通过合理设定恒温器温度，金发姑娘可获得的最大产奶量。</p><p>恒温器温度可设置为任何整数。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, x, y, z;</span><br><span class="line"><span class="keyword">static</span> TreeMap&lt;Integer, Integer&gt; m = <span class="keyword">new</span> TreeMap&lt;Integer, Integer&gt;();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">x = inScanner.nextInt();</span><br><span class="line">y = inScanner.nextInt();</span><br><span class="line">z = inScanner.nextInt();</span><br><span class="line"><span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> ll, lr;</span><br><span class="line">ll = inScanner.nextInt();</span><br><span class="line">lr = inScanner.nextInt();</span><br><span class="line">r = Math.max(r, lr + <span class="number">1</span>);</span><br><span class="line">m.put(<span class="number">0</span>, m.getOrDefault(<span class="number">0</span>, <span class="number">0</span>) + x);</span><br><span class="line">m.put(ll, m.getOrDefault(ll, <span class="number">0</span>) + y - x);</span><br><span class="line">m.put(lr + <span class="number">1</span>, m.getOrDefault(lr + <span class="number">1</span>, <span class="number">0</span>) - y + z);</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">long</span> ans = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">Collection&lt;Integer&gt; value = m.values();</span><br><span class="line"><span class="keyword">for</span>(Integer i : value)</span><br><span class="line">{</span><br><span class="line">sum += i;</span><br><span class="line"><span class="keyword">if</span>(ans &lt; sum)</span><br><span class="line">ans = sum;</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4 7 9 6</span></span><br><span class="line"><span class="comment">5 8</span></span><br><span class="line"><span class="comment">3 4</span></span><br><span class="line"><span class="comment">13 20</span></span><br><span class="line"><span class="comment">7 10</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, x, y, z;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] l = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">20010</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] r = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">20010</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] b = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">40010</span>];</span><br><span class="line"><span class="keyword">static</span> Vector&lt;Integer&gt; v = <span class="keyword">new</span> Vector&lt;&gt;();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = v.size() - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(t &gt; v.get(mid))</span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r = mid;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">x = inScanner.nextInt();</span><br><span class="line">y = inScanner.nextInt();</span><br><span class="line">z = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">l[i] = inScanner.nextInt();</span><br><span class="line">r[i] = inScanner.nextInt();</span><br><span class="line"><span class="keyword">if</span>(!v.contains(l[i]))</span><br><span class="line">v.add(l[i]);</span><br><span class="line"><span class="keyword">if</span>(!v.contains(r[i]))</span><br><span class="line">v.add(r[i]);</span><br><span class="line">}</span><br><span class="line">v.add(Integer.MIN_VALUE);</span><br><span class="line">v.add(Integer.MAX_VALUE);</span><br><span class="line">Collections.sort(v);</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">int</span> ll = v.size() - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> L = find(l[i]), R = find(r[i]);</span><br><span class="line">b[<span class="number">0</span>] += x;</span><br><span class="line">b[L] += y -x;</span><br><span class="line">b[R + <span class="number">1</span>] += z - y;</span><br><span class="line">b[ll] -= z;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">long</span> ans = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ll; i ++)</span><br><span class="line">{</span><br><span class="line">sum += b[i];</span><br><span class="line"><span class="keyword">if</span>(sum &gt; ans)</span><br><span class="line">ans = sum;</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4 7 9 6</span></span><br><span class="line"><span class="comment">5 8</span></span><br><span class="line"><span class="comment">3 4</span></span><br><span class="line"><span class="comment">13 20</span></span><br><span class="line"><span class="comment">7 10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>品种邻近</title>
      <link href="2022/01/19/pin-chong-lin-jin/"/>
      <url>2022/01/19/pin-chong-lin-jin/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1971/">1969. 品种邻近 - AcWing题库</a></p><p>农夫约翰的 N 头奶牛排成一排，每头奶牛都用其品种 ID 进行描述。</p><p>如果两头相同品种的牛靠得太近，它们就会吵架。</p><p>具体的说，如果同一品种的两头奶牛在队列中的位置相差不超过 K，我们就称这是一对拥挤的牛。</p><p>请计算品种 ID 最大的拥挤奶牛对的品种 ID。</p><h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>第一行包含两个整数 N 和 K。</p><p>接下来 N 行，每行包含一个整数表示队列中一头奶牛的品种 ID。</p><h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>输出品种 ID 最大的拥挤奶牛对的品种 ID。</p><p>如果不存在拥挤奶牛队，则输出 −1。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> ans = -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1000100</span>];</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">k = inScanner.nextInt();</span><br><span class="line">Arrays.fill(a, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> b = inScanner.nextInt();</span><br><span class="line"><span class="keyword">if</span>(a[b] != <span class="number">0</span> &amp;&amp; i - a[b] &lt;= k)</span><br><span class="line">ans = Math.max(b, ans);</span><br><span class="line">a[b] = i;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">6 3</span></span><br><span class="line"><span class="comment">7</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奶牛过马路</title>
      <link href="2022/01/19/nai-niu-guo-ma-lu/"/>
      <url>2022/01/19/nai-niu-guo-ma-lu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1980/">1978. 奶牛过马路 - AcWing题库</a></p><p>每天，农夫约翰的 N 头奶牛都会穿过农场中间的马路。</p><p>考虑约翰的农场在二维平面的地图，马路沿水平方向延伸，马路的一侧由直线 y=0 描述，另一侧由直线 y=1 描述。</p><p>奶牛 ii 从马路一侧的位置 (ai,0) 沿直线过马路到达另一侧的位置 (bi,1)。</p><p>所有 ai 互不相同，所有 bi 互不相同。</p><p>尽管他的奶牛们行动敏捷，他还是担心行动路径交叉的两头奶牛在过马路时发生碰撞。</p><p>约翰认为，如果一头奶牛的行动路径没有跟其他任何奶牛的行动路径相交，则该奶牛是安全的。</p><p>请帮助约翰计算安全奶牛的数量。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">node</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">node</span>&gt; </span>{</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(node o)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> x - o.x;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span>[] suma = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span>[] sumb = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100010</span>];</span><br><span class="line">node[] a = <span class="keyword">new</span> node[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">a[i] = <span class="keyword">new</span> node();</span><br><span class="line">a[i].x = inScanner.nextInt();</span><br><span class="line">a[i].y = inScanner.nextInt();;</span><br><span class="line">}</span><br><span class="line">Arrays.sort(a, <span class="number">1</span>, n + <span class="number">1</span>);</span><br><span class="line">suma[<span class="number">0</span>] = -<span class="number">1000010</span>;</span><br><span class="line">sumb[n + <span class="number">1</span>] = <span class="number">1000010</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">suma[i] = Math.max(suma[i - <span class="number">1</span>], a[i].y);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i --)</span><br><span class="line">sumb[i] = Math.min(sumb[i + <span class="number">1</span>], a[i].y);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(suma[i - <span class="number">1</span>] &lt; a[i].y &amp;&amp; a[i].y &lt; sumb[i + <span class="number">1</span>])</span><br><span class="line">ans ++;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">-3 4</span></span><br><span class="line"><span class="comment">7 8</span></span><br><span class="line"><span class="comment">10 16</span></span><br><span class="line"><span class="comment">3 9</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打乱字母</title>
      <link href="2022/01/18/da-luan-zi-mu/"/>
      <url>2022/01/18/da-luan-zi-mu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1998/">1996. 打乱字母 - AcWing题库</a></p><p>农夫约翰将按字典序排列的 NN 头奶牛的名字列表贴在了牛棚的门上。</p><p>每个奶牛的名字都由一个长度介于 1 到 20 之间的由小写字母构成的唯一字符串表示。</p><p>麻烦制造者贝茜将列表中的奶牛名字重新排序打乱了列表。</p><p>此外，她还对每头奶牛的名字中的字母顺序进行了重新排列（也可能保持不变）。</p><p>给定修改过后的列表，请帮助约翰确定列表中的每个名字可能出现在原始列表中的最低和最高位置。</p><h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>第一行包含整数 N。</p><p>接下来 N 行，按照修改过后列表的顺序，给出了修改过后的奶牛的名字。</p><h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>共 N 行，第 i 行输出给定的第 i 个字符串在原始列表中可能的最低和最高位置。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">n = in.nextInt();</span><br><span class="line">String[] s = <span class="keyword">new</span> String[<span class="number">50010</span>];</span><br><span class="line">String[] a = <span class="keyword">new</span> String[<span class="number">50010</span>];</span><br><span class="line">String[] b = <span class="keyword">new</span> String[<span class="number">50010</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">s[i] = in.next();</span><br><span class="line"><span class="keyword">char</span>[] q = s[i].toCharArray();</span><br><span class="line">Arrays.sort(q);</span><br><span class="line">a[i] = String.valueOf(q);</span><br><span class="line">StringBuilder t = <span class="keyword">new</span> StringBuilder(a[i]).reverse();</span><br><span class="line">b[i] = String.valueOf(t);</span><br><span class="line">}</span><br><span class="line">in.close();</span><br><span class="line">Arrays.sort(a, <span class="number">1</span>, n + <span class="number">1</span>);</span><br><span class="line">Arrays.sort(b, <span class="number">1</span>, n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">char</span>[] tt = s[i].toCharArray();</span><br><span class="line">Arrays.sort(tt);</span><br><span class="line">String t = String.valueOf(tt);</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(b[mid].compareTo(t) &gt;= <span class="number">0</span>)</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">System.out.print(l + <span class="string">" "</span>);</span><br><span class="line">t = String.valueOf(<span class="keyword">new</span> StringBuilder(t).reverse());</span><br><span class="line">l = <span class="number">1</span>;</span><br><span class="line">r = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[mid].compareTo(t) &gt; <span class="number">0</span>)</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">System.out.println(l - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">essieb</span></span><br><span class="line"><span class="comment">a</span></span><br><span class="line"><span class="comment">xzy</span></span><br><span class="line"><span class="comment">elsie</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马蹄铁</title>
      <link href="2022/01/18/ma-ti-tie/"/>
      <url>2022/01/18/ma-ti-tie/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/2007/">2005. 马蹄铁 - AcWing题库</a></p><p>尽管奶牛贝茜发现每个平衡括号字符串都很美观，但她特别喜欢被她称为“完全”平衡的括号字符串——一个由 <code>(</code> 构成的字符串后接一个长度相同的 <code>)</code> 构成的字符串。</p><p>例如：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(((())))</span><br></pre></td></tr></tbody></table></figure><p>有一天，当贝茜穿过牛棚时，她发现地面上有一个 N×N 的马蹄铁矩阵。每个马蹄铁的方向都看上去像 <code>(</code> 或 <code>)</code>。</p><p>从矩阵的左上角开始，贝茜希望四处走动以拾起马蹄铁，使得她捡起的马蹄铁按顺序构成的括号字符串是完全平衡的。</p><p>请计算她能得到的最长完全平衡括号字符串的长度。</p><p>每一步中，贝茜可以沿上下左右四个方向移动。</p><p>她只能移动到包含马蹄铁的方格区域内，当她进入该区域时就会拿起那里的马蹄铁，并无法再次回到该位置（因为该位置没有马蹄铁了）。</p><p>她首先拿起的是左上角的马蹄铁。</p><p>由于她拿起的马蹄铁要形成一个完全平衡的字符串，因此她可能无法将所有马蹄铁都拿起来。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span>[][] s = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] xx = {<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] yy = {<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">boolean</span>[][] f = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">f[x][y] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r)</span><br><span class="line">{</span><br><span class="line">ans = Math.max(ans, l + r);</span><br><span class="line">f[x][y] = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x1 = x + xx[i], y1 = y + yy[i];</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &lt; x1 &amp;&amp; x1 &lt;= n &amp;&amp; <span class="number">0</span> &lt; y1 &amp;&amp; y1 &lt;= n &amp;&amp; !f[x1][y1])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(s[x][y] == <span class="string">')'</span> &amp;&amp; s[x1][y1] == <span class="string">'('</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(s[x1][y1] == <span class="string">')'</span>)</span><br><span class="line">bfs(x1, y1, l, r + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">bfs(x1, y1, l + <span class="number">1</span>, r);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">f[x][y] = <span class="keyword">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">String ss;</span><br><span class="line">ss = inScanner.next();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j ++)</span><br><span class="line">{</span><br><span class="line">s[i][j + <span class="number">1</span>] = ss.charAt(j);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">1</span>][<span class="number">1</span>] == <span class="string">'('</span>)</span><br><span class="line">bfs(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">(())</span></span><br><span class="line"><span class="comment">()((</span></span><br><span class="line"><span class="comment">(()(</span></span><br><span class="line"><span class="comment">))))</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贝茜放慢脚步</title>
      <link href="2022/01/18/bei-qian-fang-man-jiao-bu/"/>
      <url>2022/01/18/bei-qian-fang-man-jiao-bu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1936/">1934. 贝茜放慢脚步 - AcWing题库</a></p><p>奶牛贝茜正在参加冬季哞林匹克运动会的越野滑雪比赛。</p><p>她以每秒 1 米的速度出发。</p><p>但是，随着时间的推移，她变得越来越疲倦，她开始放慢脚步。</p><p>每次放慢脚步，贝茜的速度都会降低：减速一次后，她以每秒 1/2 米的速度移动，减速两次后，则以每秒 1/3 米的速度移动，依此类推。</p><p>你将被告知何时何地贝茜会减速。</p><p>当减速信息格式为：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T 17</span><br></pre></td></tr></tbody></table></figure><p>意味着，贝茜在某个时间点减速，本例表示比赛开始第 17 秒贝茜减速。</p><p>当减速信息格式为：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D 10</span><br></pre></td></tr></tbody></table></figure><p>意味着，贝茜在某个地点减速，本例表示在行进 10 米处减速。</p><p>给定 N 个减速信息，请计算贝茜滑完一千米需要多少秒。</p><p>将你的答案四舍五入到最接近的整数（ 0.5 向上舍入为 1）。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> PriorityQueue&lt;Integer&gt; T = <span class="keyword">new</span> PriorityQueue&lt;&gt;();</span><br><span class="line"><span class="keyword">static</span> PriorityQueue&lt;Integer&gt; D = <span class="keyword">new</span> PriorityQueue&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">while</span>(n -- &gt; <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"T"</span>.equals(inScanner.next()))</span><br><span class="line">T.offer(inScanner.nextInt());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">D.offer(inScanner.nextInt());</span><br><span class="line">}</span><br><span class="line"><span class="keyword">double</span> v = <span class="number">1</span>, time = <span class="number">0</span>, dis = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!T.isEmpty() || !D.isEmpty())</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(T.isEmpty() || (!D.isEmpty() &amp;&amp; time + (D.peek() - dis) * v &lt; T.peek()))</span><br><span class="line">{</span><br><span class="line">time += (D.peek() - dis) * v;</span><br><span class="line">dis = D.poll();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">dis += (T.peek() - time) / v;</span><br><span class="line">time = T.poll();</span><br><span class="line">}</span><br><span class="line">v ++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> ans = (<span class="keyword">int</span>)(time + (<span class="number">1000</span> - dis) * v + <span class="number">0.5</span>);</span><br><span class="line">System.out.println(ans);</span><br><span class="line">inScanner.close();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">T 30</span></span><br><span class="line"><span class="comment">D 10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>岛</title>
      <link href="2022/01/18/dao/"/>
      <url>2022/01/18/dao/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/2016/">2014. 岛 - AcWing题库</a></p><p>每当下雨时，农夫约翰的田地总是被洪水淹没。</p><p>由于田地不是完全水平的，所以一些地方充满水后，留下了许多被水隔开的“岛”。</p><p>约翰的田地被描述为由 N 个连续高度值 H1,…,HN 指定的一维场景。</p><p>假设该场景被无限高的围墙包围着，请考虑暴雨期间发生的情况：</p><p>最低处首先被水覆盖，形成一些不连贯的岛，随着水位的不断上升，这些岛最终都会被覆盖。</p><p>一旦水位等于一块田地的高度，那块田地就被认为位于水下。</p><p><img src="https://cdn.acwing.com/media/article/image/2020/06/24/19_8c986a0cb5-fig_islands.png" alt="fig_islands.png"></p><p>上图显示了一个示例：在左图中，我们只加入了刚好超过 1 单位的水，此时剩下 4 个岛（最大岛屿剩余数量），而在右图中，我们共加入了 7 单位的水，此时仅剩下 22个岛。</p><p>请计算，暴风雨期间我们能在某个时间点看到的最大岛屿数量。</p><p>水会一直上升到所有田地都在水下。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">node</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">node</span>&gt;</span>{</span><br><span class="line"><span class="keyword">int</span> h, poit;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> poit)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">this</span>.h = h;</span><br><span class="line"><span class="keyword">this</span>.poit = poit;</span><br><span class="line">}</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(node o)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> h - o.h;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">static</span> node[] v = <span class="keyword">new</span> node[<span class="number">100100</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> nn, cnt = <span class="number">0</span>;</span><br><span class="line">nn = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= nn; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line">b = inScanner.nextInt();</span><br><span class="line"><span class="keyword">if</span>(b != a[n])</span><br><span class="line">{</span><br><span class="line">a[++ n] = b;</span><br><span class="line">v[cnt ++] = <span class="keyword">new</span> node(a[n], n);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">a[n + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">inScanner.close();</span><br><span class="line">Arrays.sort(v, <span class="number">0</span>, cnt);;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">1</span>, ans = <span class="number">0</span>;</span><br><span class="line">v[cnt] = <span class="keyword">new</span> node(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> j = v[i].poit;</span><br><span class="line"><span class="keyword">if</span>(a[j - <span class="number">1</span>] &gt; a[j] &amp;&amp; a[j] &lt; a[j + <span class="number">1</span>])</span><br><span class="line">res ++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[j - <span class="number">1</span>] &lt; a[j] &amp;&amp; a[j] &gt; a[j + <span class="number">1</span>])</span><br><span class="line">res --;</span><br><span class="line"><span class="keyword">if</span>(v[i].h != v[i + <span class="number">1</span>].h)</span><br><span class="line">ans = Math.max(ans, res);</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">8</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拖拉机</title>
      <link href="2022/01/17/tuo-la-ji/"/>
      <url>2022/01/17/tuo-la-ji/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>题目链接：<a href="https://www.acwing.com/problem/content/2021/">2019. 拖拉机 - AcWing题库</a></p><p>干了一整天的活，农夫约翰完全忘记了他把拖拉机落在田地中央了。</p><p>他的奶牛非常调皮，决定对约翰来场恶作剧。</p><p>她们在田地的不同地方放了 N 捆干草，这样一来，约翰想要开走拖拉机就必须先移除一些干草捆。</p><p>拖拉机的位置以及 N 捆干草的位置都是二维平面上的整数坐标点。</p><p>拖拉机的初始位置上没有干草捆。</p><p>当约翰驾驶拖拉机时，他只能沿平行于坐标轴的方向（北，南，东和西）移动拖拉机，并且拖拉机必须每次移动整数距离。</p><p>例如，驾驶拖拉机先向北移动 2 单位长度，然后向东移动 3 单位长度。</p><p>拖拉机无法移动到干草捆占据的位置。</p><p>请帮助约翰确定他需要移除的干草捆的最小数量，以便他能够将拖拉机开到二维平面的原点。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">node</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">node</span>&gt;</span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="keyword">int</span> x, y, dist;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> dist)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.x = x;</span><br><span class="line"><span class="keyword">this</span>.y = y;</span><br><span class="line"><span class="keyword">this</span>.dist = dist;</span><br><span class="line">}</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(node o)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.dist - o.dist;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, sx, sy;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[][] dis = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2010</span>][<span class="number">2010</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">boolean</span>[][] f = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">2010</span>][<span class="number">2010</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">boolean</span>[][] g = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">2010</span>][<span class="number">2010</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] xx = {<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] yy = {<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>};</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dijkstra</span><span class="params">(node root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">Queue&lt;node&gt; q = <span class="keyword">new</span> PriorityQueue&lt;node&gt;();</span><br><span class="line">q.add(root);</span><br><span class="line"><span class="keyword">while</span>(!q.isEmpty())</span><br><span class="line">{</span><br><span class="line">node top = q.poll();</span><br><span class="line"><span class="keyword">if</span>(top.x == <span class="number">0</span> &amp;&amp; top.y == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(f[top.x][top.y])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">f[top.x][top.y] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> tx = top.x + xx[i];</span><br><span class="line"><span class="keyword">int</span> ty = top.y + yy[i];</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &lt;= tx &amp;&amp; tx &lt; <span class="number">2000</span> &amp;&amp; <span class="number">0</span> &lt;= ty &amp;&amp; ty &lt; <span class="number">2000</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> w = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(g[tx][ty]) </span><br><span class="line">w = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(top.dist + w &lt; dis[tx][ty])</span><br><span class="line">{</span><br><span class="line">dis[tx][ty] = top.dist + w;</span><br><span class="line"><span class="keyword">if</span>(!f[tx][ty])</span><br><span class="line">q.add(<span class="keyword">new</span> node(tx, ty, dis[tx][ty]));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> dis[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dis.length; i ++)</span><br><span class="line">Arrays.fill(dis[i], Integer.MAX_VALUE);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">sx = inScanner.nextInt();</span><br><span class="line">sy = inScanner.nextInt();</span><br><span class="line">dis[sx][sy] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">a = inScanner.nextInt();</span><br><span class="line">b = inScanner.nextInt();</span><br><span class="line">g[a][b] = <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">int</span> ans = dijkstra(<span class="keyword">new</span> node(sx, sy, <span class="number">0</span>));</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">7 6 3</span></span><br><span class="line"><span class="comment">6 2</span></span><br><span class="line"><span class="comment">5 2</span></span><br><span class="line"><span class="comment">4 3</span></span><br><span class="line"><span class="comment">2 1</span></span><br><span class="line"><span class="comment">7 3</span></span><br><span class="line"><span class="comment">5 4</span></span><br><span class="line"><span class="comment">6 4</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奶牛选美</title>
      <link href="2022/01/16/nai-niu-xuan-mei/"/>
      <url>2022/01/16/nai-niu-xuan-mei/</url>
      
        <content type="html"><![CDATA[<h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="https://www.acwing.com/problem/content/2062/">2060. 奶牛选美 - AcWing题库</a></p><p>听说最近两斑点的奶牛最受欢迎，约翰立即购进了一批两斑点牛。</p><p>不幸的是，时尚潮流往往变化很快，当前最受欢迎的牛变成了一斑点牛。</p><p>约翰希望通过给每头奶牛涂色，使得它们身上的两个斑点能够合为一个斑点，让它们能够更加时尚。</p><p>牛皮可用一个 N×M 的字符矩阵来表示，如下所示：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">................</span><br><span class="line">..XXXX....XXX...</span><br><span class="line">...XXXX....XX...</span><br><span class="line">.XXXX......XXX..</span><br><span class="line">........XXXXX...</span><br><span class="line">.........XXX....</span><br></pre></td></tr></tbody></table></figure><p>其中，X 表示斑点部分。</p><p>如果两个 X 在垂直或水平方向上相邻（对角相邻不算在内），则它们属于同一个斑点，由此看出上图中恰好有两个斑点。</p><p>约翰牛群里<strong>所有的牛都有两个斑点</strong>。</p><p>约翰希望通过使用油漆给奶牛尽可能少的区域内涂色，将两个斑点合为一个。</p><p>在上面的例子中，他只需要给三个 .. 区域内涂色即可（新涂色区域用 ∗ 表示）：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">................</span><br><span class="line">..XXXX....XXX...</span><br><span class="line">...XXXX*...XX...</span><br><span class="line">.XXXX..**..XXX..</span><br><span class="line">........XXXXX...</span><br><span class="line">.........XXX....</span><br></pre></td></tr></tbody></table></figure><p>请帮助约翰确定，为了使两个斑点合为一个，他需要涂色区域的最少数量。</p><h4 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] xx = {<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>,<span class="number">0</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] yy = {<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span>[][] s = <span class="keyword">new</span> <span class="keyword">char</span>[N][N];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">boolean</span>[][] f = <span class="keyword">new</span> <span class="keyword">boolean</span>[N][N];</span><br><span class="line"><span class="keyword">static</span> List&lt;node&gt;[] q = <span class="keyword">new</span> ArrayList[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">node</span></span>{</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.x = x;</span><br><span class="line"><span class="keyword">this</span>.y = y;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> cnt)</span> </span>{</span><br><span class="line">f[x][y] = <span class="keyword">true</span>;</span><br><span class="line">q[cnt].add(<span class="keyword">new</span> node(x, y));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x1 = x + xx[i];</span><br><span class="line"><span class="keyword">int</span> y1 = y + yy[i];</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &lt;= x1 &amp;&amp; x1 &lt; n &amp;&amp; <span class="number">0</span> &lt;= y1 &amp;&amp; y1 &lt; m &amp;&amp; !f[x1][y1] &amp;&amp; s[x1][y1] == <span class="string">'X'</span>)</span><br><span class="line">bfs(x1, y1, cnt);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">m = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; q.length; i ++)</span><br><span class="line">q[i] = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line">String ss;</span><br><span class="line">ss = inScanner.next();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++)</span><br><span class="line">s[i][j] = ss.charAt(j);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!f[i][j] &amp;&amp; s[i][j] == <span class="string">'X'</span>)</span><br><span class="line">{</span><br><span class="line">bfs(i, j, cnt);</span><br><span class="line">cnt ++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">for</span>(node a : q[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">for</span>(node b : q[<span class="number">1</span>])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> t = Math.abs(a.x - b.x) + Math.abs(a.y - b.y) - <span class="number">1</span>;</span><br><span class="line">ans = Math.min(ans, t);</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">6 16</span></span><br><span class="line"><span class="comment">................</span></span><br><span class="line"><span class="comment">..XXXX....XXX...</span></span><br><span class="line"><span class="comment">...XXXX....XX...</span></span><br><span class="line"><span class="comment">.XXXX......XXX..</span></span><br><span class="line"><span class="comment">........XXXXX...</span></span><br><span class="line"><span class="comment">.........XXX....</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>粉刷栅栏</title>
      <link href="2022/01/15/fen-shua-zha-lan/"/>
      <url>2022/01/15/fen-shua-zha-lan/</url>
      
        <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>题目链接：<a href="https://www.acwing.com/problem/content/1989/">1987. 粉刷栅栏 - AcWing题库</a></p><p>农夫约翰发明了一种绝妙的方法来粉刷牛棚旁边的长栅栏（把栅栏想象成一维的数轴）。</p><p>他只需要在他最喜欢的奶牛贝茜身上挂一个刷子，然后在一旁悠闲的喝凉水就行了。</p><p>贝茜沿着栅栏来回走动时，会将她走过的栅栏部分涂上油漆。</p><p>贝茜从栅栏上的位置 0 处开始，共进行 N 次移动。</p><p>移动可能形如 <code>10 L</code>，表示向左移动 10 单位距离，也可能形如 <code>15 R</code>，表示向右移动 15 单位距离。</p><p>给定贝茜的 N 次移动列表，约翰想知道至少被涂抹了 2 层油漆的区域的总长度。</p><p>整个行进过程中，贝茜距离出发地的距离不会超过 $10^9$。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        Map&lt;Integer,Integer&gt; m = <span class="keyword">new</span> TreeMap&lt;&gt;( (a,b) -&gt; a-b );</span><br><span class="line">        n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            String s;</span><br><span class="line">            x = in.nextInt();</span><br><span class="line">            s = in.next();</span><br><span class="line">            <span class="keyword">if</span>(s.equals(<span class="string">"L"</span>))</span><br><span class="line">            {</span><br><span class="line">                m.put(idx, m.getOrDefault(idx, <span class="number">0</span>) - <span class="number">1</span>);</span><br><span class="line">                idx -= x;</span><br><span class="line">                m.put(idx, m.getOrDefault(idx, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">                </span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                m.put(idx, m.getOrDefault(idx, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">                idx += x;</span><br><span class="line">                m.put(idx, m.getOrDefault(idx, <span class="number">0</span>) - <span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">long</span> sum = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i : m.keySet())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(sum &lt;= <span class="number">1</span> &amp;&amp; sum + m.get(i) &gt; <span class="number">1</span>)</span><br><span class="line">                p = i;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(sum &gt; <span class="number">1</span> &amp;&amp; sum + m.get(i) &lt;= <span class="number">1</span>)</span><br><span class="line">                ans += i - p;</span><br><span class="line">            sum += m.get(i);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(ans);</span><br><span class="line">        in.close();</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">6</span></span><br><span class="line"><span class="comment">2 R</span></span><br><span class="line"><span class="comment">6 L</span></span><br><span class="line"><span class="comment">1 R</span></span><br><span class="line"><span class="comment">8 L</span></span><br><span class="line"><span class="comment">1 R</span></span><br><span class="line"><span class="comment">2 R</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笨拙的手指</title>
      <link href="2022/01/13/ben-zhuo-de-shou-zhi/"/>
      <url>2022/01/13/ben-zhuo-de-shou-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>奶牛贝茜正在学习如何在不同进制之间转换数字。</p><p>但是她总是犯错误，因为她无法轻易的用两个前蹄握住笔。</p><p>每当贝茜将数字转换为一个新的进制并写下结果时，她总是将其中的某一位数字写错。</p><p>例如，如果她将数字 $14$ 转换为二进制数，那么正确的结果应为$ 11101110$，但她可能会写下 $01100110 或 11111111$。</p><p>贝茜不会额外添加或删除数字，但是可能会由于写错数字的原因，写下包含前导 00 的数字。</p><p>给定贝茜将数字 $N$ 转换为二进制数字以及三进制数字的结果，请确定 $N$ 的正确初始值（十进制表示）。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>进行枚举，枚举每位出错，然后对比出错后两者是否相等。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.lang.Math;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>{</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">work</span><span class="params">(String a, String b)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">int</span> la = a.length();</span><br><span class="line">        <span class="keyword">int</span> lb = b.length();</span><br><span class="line">        <span class="keyword">char</span>[] sa = a.toCharArray();</span><br><span class="line">        <span class="keyword">char</span>[] sb = b.toCharArray();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; la; i ++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">char</span> qa = sa[i];</span><br><span class="line">            <span class="keyword">if</span>(sa[i] == <span class="string">'0'</span>)</span><br><span class="line">                sa[i] = <span class="string">'1'</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sa[i] = <span class="string">'0'</span>;</span><br><span class="line">            String a1 = <span class="keyword">new</span> String(sa);</span><br><span class="line">            <span class="keyword">int</span> na = Integer.parseInt(a1, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lb; j ++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">char</span> qb = sb[j];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">char</span> k = <span class="string">'0'</span>; k &lt;= <span class="string">'2'</span>; k ++)</span><br><span class="line">                {    </span><br><span class="line">                    <span class="keyword">if</span>(k != qb)</span><br><span class="line">                    {</span><br><span class="line">                        sb[j] = k;</span><br><span class="line">                        String b1 = <span class="keyword">new</span> String(sb);</span><br><span class="line">                        <span class="keyword">int</span> nb = Integer.parseInt(b1, <span class="number">3</span>);</span><br><span class="line">                        <span class="keyword">if</span>(na == nb)</span><br><span class="line">                            <span class="keyword">return</span> na;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                sb[j] = qb;</span><br><span class="line">            }</span><br><span class="line">            sa[i] = qa;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s,s1;</span><br><span class="line">        s = in.next();</span><br><span class="line">        s1 = in.next();</span><br><span class="line">        <span class="keyword">int</span> ans = work(s, s1);</span><br><span class="line">        System.out.printf(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu搭建docker以及wordpress</title>
      <link href="2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/"/>
      <url>2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/</url>
      
        <content type="html"><![CDATA[<h3 id="安装docker以及搭建wordpress的过程。"><a href="#安装docker以及搭建wordpress的过程。" class="headerlink" title="安装docker以及搭建wordpress的过程。"></a>安装docker以及搭建wordpress的过程。</h3><ol><li><p>安装docker，根据官方文档的安装过程进行一步步安装。</p><p>安装文档地址：<a href="https://docs.docker.com/engine/install/ubuntu/">https://docs.docker.com/engine/install/ubuntu/</a></p></li><li><p>启动docker服务：<code>sudo service docker start</code></p></li><li><p>docker安装wordpress：</p><figure class="highlight do"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull wordpress：latest</span><br></pre></td></tr></tbody></table></figure></li><li><p>docker安装mysql</p><figure class="highlight do"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull mysql</span><br></pre></td></tr></tbody></table></figure><p>配置mysql：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d -p 3306:3306 -v /var/lib/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql mysql</span><br></pre></td></tr></tbody></table></figure><p>-d： 后台运行，我们数据库肯定上需要一直在跑的嘛。<br>-p： 上映射端口，mysql容器相当于一台虚拟机，是不能直接从外网访问的，需要通过主机去访问，前面的上主机端口 : 后面上容器端口，现在上将3306映射到3306上，这样访问公网的3306就是容器的端口了，但一般可以改其他端口，不安全。<br>-v： 是相当于文件夹重定向吧，将主机的一个目录和容器目录同步，这样会方便修改日期的文件及配置。<br>-e： 环境变量，设置数据库密码，还有–name 容器的名称。</p><p><code>mysql  -u root -p</code>进入mysql</p></li><li><p>运行wordpress</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有volume的</span></span><br><span class="line">sudo docker run --name wordpress -v /<span class="keyword">var</span>/www/html:<span class="regexp">/var/</span>www/html --link mysql:mysql -p <span class="number">5001</span>:<span class="number">80</span> -d wordpress</span><br><span class="line"><span class="comment">//没有数据卷的</span></span><br><span class="line">sudo docker run --name wordpress --link mysql:mysql -p <span class="number">5001</span>:<span class="number">80</span> -d wordpress</span><br></pre></td></tr></tbody></table></figure></li><li><p>输入服务器ip就进行构建。</p><p>桥接模式直接输入虚拟机的ip，我的是<code>192.168.43.100</code></p></li><li><p>选择安装的语言。<img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105193948170.png" alt=""></p></li><li><p>设置有关数据库的信息。<img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105194206220.png" alt=""></p></li><li><p>需要注意的是：<font color="red">mysql要存在wordpress数据库</font></p><font color="red">如果虚拟机的网络配置为NAT模式，数据库主机为localhost</font><p><img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105194832393.png" alt=""></p></li><li><p>然后进行安装。</p><p><img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105195042500.png" alt=""></p></li><li><p>安装成功</p><p><img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105195122276.png" alt=""></p></li><li><p>登录用户。</p><p><img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105195136423.png" alt=""></p></li><li><p>然后就完成了wordpress的安装。</p><p><img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105195528701.png" alt=""></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 搭建教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3599 Koishi Loves Construction</title>
      <link href="2021/03/11/p3599-koishi-loves-construction/"/>
      <url>2021/03/11/p3599-koishi-loves-construction/</url>
      
        <content type="html"><![CDATA[<p>题目链接：<a href="https://www.luogu.com.cn/problem/P3599">https://www.luogu.com.cn/problem/P3599</a></p><p>题解：</p><p><img src="/2021/03/11/p3599-koishi-loves-construction/1.png" alt=""></p><p>代码：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mset(s, _) memset(s, _, sizeof(s))</span></span><br><span class="line"><span class="comment">//#define lo</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">coutx</span><span class="params">(<span class="keyword">double</span> q, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//cout.setf(ios::fixed);</span></span><br><span class="line"><span class="comment">//cout.unsetf(ios::fixed);</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(x) &lt;&lt; q &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ksc</span><span class="params">(ll x, ll y, ll mod)</span><span class="comment">//快速乘</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> ( x * y - (ll) ( (<span class="keyword">long</span> <span class="keyword">double</span>) x / mod*y )*mod + mod ) % mod;</span><br><span class="line">}</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">}</span><br><span class="line"><span class="function">ll <span class="title">lcm</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a/gcd(a,b)*b;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> X, T;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(k); i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(k % i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">ll inv[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(n != <span class="number">4</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">2</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line">inv[i] = (ll)((n - n / i) * inv[n % i]) % n;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (i * inv[i - <span class="number">1</span>] + n) % n &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; n &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">4</span>)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"2 1 3 2 4"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lo</span></span><br><span class="line"> freopen(<span class="string">"data.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"> freopen(<span class="string">"data.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="number">0</span>));</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; X &gt;&gt; T;</span><br><span class="line"><span class="keyword">if</span>(X == <span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">while</span>(T --)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> a = n;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"2 1"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n % <span class="number">2</span>)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(b &lt;= n - <span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; a &lt;&lt; <span class="string">' '</span> &lt;&lt; b;</span><br><span class="line">a -= <span class="number">2</span>;</span><br><span class="line">b += <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"> } </span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">while</span>(T --)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">4</span> || isprime(n))</span><br><span class="line">work();</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> }</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>（一）一群小青蛙呱蹦呱蹦呱</title>
      <link href="2021/03/01/yi-qun-xiao-qing-wa-gu-beng-gu-beng-gu/"/>
      <url>2021/03/01/yi-qun-xiao-qing-wa-gu-beng-gu-beng-gu/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>链接：<a href="https://ac.nowcoder.com/acm/contest/9981/J">https://ac.nowcoder.com/acm/contest/9981/J</a><br>来源：牛客网</p><p>有n个格子，每个格子里有一个数，1,2,3,4…n   </p><p>   牛牛放出<strong>无穷</strong>只青蛙。   </p><p>   第一只青蛙的路线是：1-&gt;2-&gt;4-&gt;8-&gt;16-&gt;….   </p><p>   第二只青蛙的路线是：1-&gt;3-&gt;9-&gt;27-&gt;81-&gt;….   </p><p>   第三只青蛙的路线是：1-&gt;5-&gt;25-&gt;125….   </p><p>   第四只青蛙的路线是：1-&gt;7-&gt;49……..   </p><p>   。。。。。。   </p><p>   用数学语言描述，第 i只青蛙的路线是首项为1，公比为p(i)的等比数列，其中p(i)代表第个素数。   </p><p>   当青蛙跳到一个格子上，如果这个格子上面有一个数，青蛙就会把这个数吃掉。   </p><p>   牛牛想知道，所有<strong>没有被</strong>吃掉的数的lcm（最小公倍数 ，Least common multiple）是多少？   </p><p>   由于这个lcm可能非常大，请输出它对10<sup>9</sup> + 7取模的值。</p><h4 id="输入描述："><a href="#输入描述：" class="headerlink" title="输入描述："></a>输入描述：</h4><p>一个整数n</p><p>1 &lt;= n &lt;= 1.6 * 10<sup>8</sup></p><h4 id="输出描述："><a href="#输出描述：" class="headerlink" title="输出描述："></a>输出描述：</h4><p>如果所有数都被吃掉了，请输出一个字符串”empty”</p><p>否则输出所有没有被吃掉的数的lcm，对模10<sup>9</sup> + 7</p><h5 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h5><p><img src="/2021/03/01/yi-qun-xiao-qing-wa-gu-beng-gu-beng-gu/silu.png" style="zoom: 67%;"></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mset(s, _) memset(s, _, sizeof(s))</span></span><br><span class="line"><span class="comment">//#define lo</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">coutx</span><span class="params">(<span class="keyword">double</span> q, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//cout.setf(ios::fixed);</span></span><br><span class="line"><span class="comment">//cout.unsetf(ios::fixed);</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(x) &lt;&lt; q &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ksc</span><span class="params">(ll x, ll y, ll mod)</span><span class="comment">//快速乘</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> ( x * y - (ll) ( (<span class="keyword">long</span> <span class="keyword">double</span>) x / mod*y )*mod + mod ) % mod;</span><br><span class="line">}</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">}</span><br><span class="line"><span class="function">ll <span class="title">lcm</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a/gcd(a,b)*b;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod1 = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">8e7</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">bool</span> isprime[N];</span><br><span class="line">ll vis[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sieve</span><span class="params">(<span class="keyword">int</span> n)</span><span class="comment">//线性筛</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">isprime[<span class="number">0</span>] = isprime[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!isprime[i])vis[ ++ cnt] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * vis[j] &lt;= n; j ++)</span><br><span class="line">{</span><br><span class="line">isprime[i * vis[j]] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i % vis[j] == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">log</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">ll res = <span class="number">0</span>;</span><br><span class="line">ll t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(t &lt;= m)</span><br><span class="line">{</span><br><span class="line">t *= n;</span><br><span class="line">res ++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> res - <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function">ll <span class="title">poww</span><span class="params">(ll a, ll b)</span><span class="comment">//快速幂</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">ll ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(b &amp; <span class="number">1</span>) </span><br><span class="line">ans = ksc(ans, a, mod1) % mod1;</span><br><span class="line">a = ksc(a, a, mod1) % mod1;</span><br><span class="line">a %= mod1;</span><br><span class="line">b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">ans %= mod1;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> ans % mod1;</span><br><span class="line"> } </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lo</span></span><br><span class="line"> freopen(<span class="string">"data.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"> freopen(<span class="string">"data.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="number">0</span>));</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> n, cnt;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span>(n &lt;= <span class="number">5</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"empty"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">cnt = sieve(n / <span class="number">2</span>);</span><br><span class="line">ans = poww(<span class="number">2</span>, <span class="built_in">log</span>(<span class="number">2</span>, n / <span class="number">3</span>));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= cnt; i ++)</span><br><span class="line">{</span><br><span class="line">ans = (ans % mod1) * poww(vis[i], <span class="built_in">log</span>(vis[i], n / <span class="number">2</span>));</span><br><span class="line">ans %= mod1;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans % mod1;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> }</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喜欢</title>
      <link href="2020/12/22/xi-huan/"/>
      <url>2020/12/22/xi-huan/</url>
      
        <content type="html"><![CDATA[<ol><li><h5 id="喜欢女孩呢，不能犹豫，不能干等，也不能要脸，不然这个女孩就是别人的了。"><a href="#喜欢女孩呢，不能犹豫，不能干等，也不能要脸，不然这个女孩就是别人的了。" class="headerlink" title="喜欢女孩呢，不能犹豫，不能干等，也不能要脸，不然这个女孩就是别人的了。"></a><font color="Fuchsia">喜欢女孩呢，不能犹豫，不能干等，也不能要脸，不然这个女孩就是别人的了。</font></h5></li><li><font color="Fuchsia">我不是突然不喜欢你了，是因为你的每次逃跑，都把我一个人留在原地。</font></li><li><font color="Fuchsia">第一个阶段否定，第二个阶段愤怒，第三个阶段妥协和期待，第四个阶段吃醋</font></li></ol>]]></content>
      
      
      <categories>
          
          <category> 喜欢 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 喜欢 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
