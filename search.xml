<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>打乱字母</title>
      <link href="2022/01/18/da-luan-zi-mu/"/>
      <url>2022/01/18/da-luan-zi-mu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1998/">1996. 打乱字母 - AcWing题库</a></p><p>农夫约翰将按字典序排列的 NN 头奶牛的名字列表贴在了牛棚的门上。</p><p>每个奶牛的名字都由一个长度介于 1 到 20 之间的由小写字母构成的唯一字符串表示。</p><p>麻烦制造者贝茜将列表中的奶牛名字重新排序打乱了列表。</p><p>此外，她还对每头奶牛的名字中的字母顺序进行了重新排列（也可能保持不变）。</p><p>给定修改过后的列表，请帮助约翰确定列表中的每个名字可能出现在原始列表中的最低和最高位置。</p><h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>第一行包含整数 N。</p><p>接下来 N 行，按照修改过后列表的顺序，给出了修改过后的奶牛的名字。</p><h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>共 N 行，第 i 行输出给定的第 i 个字符串在原始列表中可能的最低和最高位置。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">n = in.nextInt();</span><br><span class="line">String[] s = <span class="keyword">new</span> String[<span class="number">50010</span>];</span><br><span class="line">String[] a = <span class="keyword">new</span> String[<span class="number">50010</span>];</span><br><span class="line">String[] b = <span class="keyword">new</span> String[<span class="number">50010</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">s[i] = in.next();</span><br><span class="line"><span class="keyword">char</span>[] q = s[i].toCharArray();</span><br><span class="line">Arrays.sort(q);</span><br><span class="line">a[i] = String.valueOf(q);</span><br><span class="line">StringBuilder t = <span class="keyword">new</span> StringBuilder(a[i]).reverse();</span><br><span class="line">b[i] = String.valueOf(t);</span><br><span class="line">}</span><br><span class="line">in.close();</span><br><span class="line">Arrays.sort(a, <span class="number">1</span>, n + <span class="number">1</span>);</span><br><span class="line">Arrays.sort(b, <span class="number">1</span>, n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">char</span>[] tt = s[i].toCharArray();</span><br><span class="line">Arrays.sort(tt);</span><br><span class="line">String t = String.valueOf(tt);</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(b[mid].compareTo(t) &gt;= <span class="number">0</span>)</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">System.out.print(l + <span class="string">" "</span>);</span><br><span class="line">t = String.valueOf(<span class="keyword">new</span> StringBuilder(t).reverse());</span><br><span class="line">l = <span class="number">1</span>;</span><br><span class="line">r = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l &lt; r)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[mid].compareTo(t) &gt; <span class="number">0</span>)</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">System.out.println(l - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">essieb</span></span><br><span class="line"><span class="comment">a</span></span><br><span class="line"><span class="comment">xzy</span></span><br><span class="line"><span class="comment">elsie</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马蹄铁</title>
      <link href="2022/01/18/ma-ti-tie/"/>
      <url>2022/01/18/ma-ti-tie/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/2007/">2005. 马蹄铁 - AcWing题库</a></p><p>尽管奶牛贝茜发现每个平衡括号字符串都很美观，但她特别喜欢被她称为“完全”平衡的括号字符串——一个由 <code>(</code> 构成的字符串后接一个长度相同的 <code>)</code> 构成的字符串。</p><p>例如：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(((())))</span><br></pre></td></tr></tbody></table></figure><p>有一天，当贝茜穿过牛棚时，她发现地面上有一个 N×N 的马蹄铁矩阵。每个马蹄铁的方向都看上去像 <code>(</code> 或 <code>)</code>。</p><p>从矩阵的左上角开始，贝茜希望四处走动以拾起马蹄铁，使得她捡起的马蹄铁按顺序构成的括号字符串是完全平衡的。</p><p>请计算她能得到的最长完全平衡括号字符串的长度。</p><p>每一步中，贝茜可以沿上下左右四个方向移动。</p><p>她只能移动到包含马蹄铁的方格区域内，当她进入该区域时就会拿起那里的马蹄铁，并无法再次回到该位置（因为该位置没有马蹄铁了）。</p><p>她首先拿起的是左上角的马蹄铁。</p><p>由于她拿起的马蹄铁要形成一个完全平衡的字符串，因此她可能无法将所有马蹄铁都拿起来。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span>[][] s = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] xx = {<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] yy = {<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">boolean</span>[][] f = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">f[x][y] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span>(l == r)</span><br><span class="line">{</span><br><span class="line">ans = Math.max(ans, l + r);</span><br><span class="line">f[x][y] = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x1 = x + xx[i], y1 = y + yy[i];</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &lt; x1 &amp;&amp; x1 &lt;= n &amp;&amp; <span class="number">0</span> &lt; y1 &amp;&amp; y1 &lt;= n &amp;&amp; !f[x1][y1])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(s[x][y] == <span class="string">')'</span> &amp;&amp; s[x1][y1] == <span class="string">'('</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(s[x1][y1] == <span class="string">')'</span>)</span><br><span class="line">bfs(x1, y1, l, r + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">bfs(x1, y1, l + <span class="number">1</span>, r);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">f[x][y] = <span class="keyword">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line">String ss;</span><br><span class="line">ss = inScanner.next();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j ++)</span><br><span class="line">{</span><br><span class="line">s[i][j + <span class="number">1</span>] = ss.charAt(j);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">1</span>][<span class="number">1</span>] == <span class="string">'('</span>)</span><br><span class="line">bfs(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">(())</span></span><br><span class="line"><span class="comment">()((</span></span><br><span class="line"><span class="comment">(()(</span></span><br><span class="line"><span class="comment">))))</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贝茜放慢脚步</title>
      <link href="2022/01/18/bei-qian-fang-man-jiao-bu/"/>
      <url>2022/01/18/bei-qian-fang-man-jiao-bu/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/1936/">1934. 贝茜放慢脚步 - AcWing题库</a></p><p>奶牛贝茜正在参加冬季哞林匹克运动会的越野滑雪比赛。</p><p>她以每秒 1 米的速度出发。</p><p>但是，随着时间的推移，她变得越来越疲倦，她开始放慢脚步。</p><p>每次放慢脚步，贝茜的速度都会降低：减速一次后，她以每秒 1/2 米的速度移动，减速两次后，则以每秒 1/3 米的速度移动，依此类推。</p><p>你将被告知何时何地贝茜会减速。</p><p>当减速信息格式为：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T 17</span><br></pre></td></tr></tbody></table></figure><p>意味着，贝茜在某个时间点减速，本例表示比赛开始第 17 秒贝茜减速。</p><p>当减速信息格式为：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D 10</span><br></pre></td></tr></tbody></table></figure><p>意味着，贝茜在某个地点减速，本例表示在行进 10 米处减速。</p><p>给定 N 个减速信息，请计算贝茜滑完一千米需要多少秒。</p><p>将你的答案四舍五入到最接近的整数（ 0.5 向上舍入为 1）。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">static</span> PriorityQueue&lt;Integer&gt; T = <span class="keyword">new</span> PriorityQueue&lt;&gt;();</span><br><span class="line"><span class="keyword">static</span> PriorityQueue&lt;Integer&gt; D = <span class="keyword">new</span> PriorityQueue&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line"><span class="keyword">while</span>(n -- &gt; <span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"T"</span>.equals(inScanner.next()))</span><br><span class="line">T.offer(inScanner.nextInt());</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">D.offer(inScanner.nextInt());</span><br><span class="line">}</span><br><span class="line"><span class="keyword">double</span> v = <span class="number">1</span>, time = <span class="number">0</span>, dis = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!T.isEmpty() || !D.isEmpty())</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(T.isEmpty() || (!D.isEmpty() &amp;&amp; time + (D.peek() - dis) * v &lt; T.peek()))</span><br><span class="line">{</span><br><span class="line">time += (D.peek() - dis) * v;</span><br><span class="line">dis = D.poll();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">dis += (T.peek() - time) / v;</span><br><span class="line">time = T.poll();</span><br><span class="line">}</span><br><span class="line">v ++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> ans = (<span class="keyword">int</span>)(time + (<span class="number">1000</span> - dis) * v + <span class="number">0.5</span>);</span><br><span class="line">System.out.println(ans);</span><br><span class="line">inScanner.close();</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">T 30</span></span><br><span class="line"><span class="comment">D 10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>岛</title>
      <link href="2022/01/18/dao/"/>
      <url>2022/01/18/dao/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>链接：<a href="https://www.acwing.com/problem/content/2016/">2014. 岛 - AcWing题库</a></p><p>每当下雨时，农夫约翰的田地总是被洪水淹没。</p><p>由于田地不是完全水平的，所以一些地方充满水后，留下了许多被水隔开的“岛”。</p><p>约翰的田地被描述为由 N 个连续高度值 H1,…,HN 指定的一维场景。</p><p>假设该场景被无限高的围墙包围着，请考虑暴雨期间发生的情况：</p><p>最低处首先被水覆盖，形成一些不连贯的岛，随着水位的不断上升，这些岛最终都会被覆盖。</p><p>一旦水位等于一块田地的高度，那块田地就被认为位于水下。</p><p><img src="https://cdn.acwing.com/media/article/image/2020/06/24/19_8c986a0cb5-fig_islands.png" alt="fig_islands.png"></p><p>上图显示了一个示例：在左图中，我们只加入了刚好超过 1 单位的水，此时剩下 4 个岛（最大岛屿剩余数量），而在右图中，我们共加入了 7 单位的水，此时仅剩下 22个岛。</p><p>请计算，暴风雨期间我们能在某个时间点看到的最大岛屿数量。</p><p>水会一直上升到所有田地都在水下。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">node</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">node</span>&gt;</span>{</span><br><span class="line"><span class="keyword">int</span> h, poit;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> poit)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">this</span>.h = h;</span><br><span class="line"><span class="keyword">this</span>.poit = poit;</span><br><span class="line">}</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(node o)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> h - o.h;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100010</span>];</span><br><span class="line"><span class="keyword">static</span> node[] v = <span class="keyword">new</span> node[<span class="number">100100</span>];</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> nn, cnt = <span class="number">0</span>;</span><br><span class="line">nn = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= nn; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line">b = inScanner.nextInt();</span><br><span class="line"><span class="keyword">if</span>(b != a[n])</span><br><span class="line">{</span><br><span class="line">a[++ n] = b;</span><br><span class="line">v[cnt ++] = <span class="keyword">new</span> node(a[n], n);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">a[n + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">inScanner.close();</span><br><span class="line">Arrays.sort(v, <span class="number">0</span>, cnt);;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">1</span>, ans = <span class="number">0</span>;</span><br><span class="line">v[cnt] = <span class="keyword">new</span> node(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> j = v[i].poit;</span><br><span class="line"><span class="keyword">if</span>(a[j - <span class="number">1</span>] &gt; a[j] &amp;&amp; a[j] &lt; a[j + <span class="number">1</span>])</span><br><span class="line">res ++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[j - <span class="number">1</span>] &lt; a[j] &amp;&amp; a[j] &gt; a[j + <span class="number">1</span>])</span><br><span class="line">res --;</span><br><span class="line"><span class="keyword">if</span>(v[i].h != v[i + <span class="number">1</span>].h)</span><br><span class="line">ans = Math.max(ans, res);</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">8</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拖拉机</title>
      <link href="2022/01/17/tuo-la-ji/"/>
      <url>2022/01/17/tuo-la-ji/</url>
      
        <content type="html"><![CDATA[<h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>题目链接：<a href="https://www.acwing.com/problem/content/2021/">2019. 拖拉机 - AcWing题库</a></p><p>干了一整天的活，农夫约翰完全忘记了他把拖拉机落在田地中央了。</p><p>他的奶牛非常调皮，决定对约翰来场恶作剧。</p><p>她们在田地的不同地方放了 N 捆干草，这样一来，约翰想要开走拖拉机就必须先移除一些干草捆。</p><p>拖拉机的位置以及 N 捆干草的位置都是二维平面上的整数坐标点。</p><p>拖拉机的初始位置上没有干草捆。</p><p>当约翰驾驶拖拉机时，他只能沿平行于坐标轴的方向（北，南，东和西）移动拖拉机，并且拖拉机必须每次移动整数距离。</p><p>例如，驾驶拖拉机先向北移动 2 单位长度，然后向东移动 3 单位长度。</p><p>拖拉机无法移动到干草捆占据的位置。</p><p>请帮助约翰确定他需要移除的干草捆的最小数量，以便他能够将拖拉机开到二维平面的原点。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">node</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">node</span>&gt;</span></span><br><span class="line"><span class="class"></span>{</span><br><span class="line"><span class="keyword">int</span> x, y, dist;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> dist)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.x = x;</span><br><span class="line"><span class="keyword">this</span>.y = y;</span><br><span class="line"><span class="keyword">this</span>.dist = dist;</span><br><span class="line">}</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(node o)</span> </span>{</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.dist - o.dist;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, sx, sy;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[][] dis = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2010</span>][<span class="number">2010</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">boolean</span>[][] f = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">2010</span>][<span class="number">2010</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">boolean</span>[][] g = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">2010</span>][<span class="number">2010</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] xx = {<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] yy = {<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>};</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dijkstra</span><span class="params">(node root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">Queue&lt;node&gt; q = <span class="keyword">new</span> PriorityQueue&lt;node&gt;();</span><br><span class="line">q.add(root);</span><br><span class="line"><span class="keyword">while</span>(!q.isEmpty())</span><br><span class="line">{</span><br><span class="line">node top = q.poll();</span><br><span class="line"><span class="keyword">if</span>(top.x == <span class="number">0</span> &amp;&amp; top.y == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(f[top.x][top.y])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">f[top.x][top.y] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> tx = top.x + xx[i];</span><br><span class="line"><span class="keyword">int</span> ty = top.y + yy[i];</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &lt;= tx &amp;&amp; tx &lt; <span class="number">2000</span> &amp;&amp; <span class="number">0</span> &lt;= ty &amp;&amp; ty &lt; <span class="number">2000</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> w = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(g[tx][ty]) </span><br><span class="line">w = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(top.dist + w &lt; dis[tx][ty])</span><br><span class="line">{</span><br><span class="line">dis[tx][ty] = top.dist + w;</span><br><span class="line"><span class="keyword">if</span>(!f[tx][ty])</span><br><span class="line">q.add(<span class="keyword">new</span> node(tx, ty, dis[tx][ty]));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> dis[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dis.length; i ++)</span><br><span class="line">Arrays.fill(dis[i], Integer.MAX_VALUE);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">sx = inScanner.nextInt();</span><br><span class="line">sy = inScanner.nextInt();</span><br><span class="line">dis[sx][sy] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">a = inScanner.nextInt();</span><br><span class="line">b = inScanner.nextInt();</span><br><span class="line">g[a][b] = <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">int</span> ans = dijkstra(<span class="keyword">new</span> node(sx, sy, <span class="number">0</span>));</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">7 6 3</span></span><br><span class="line"><span class="comment">6 2</span></span><br><span class="line"><span class="comment">5 2</span></span><br><span class="line"><span class="comment">4 3</span></span><br><span class="line"><span class="comment">2 1</span></span><br><span class="line"><span class="comment">7 3</span></span><br><span class="line"><span class="comment">5 4</span></span><br><span class="line"><span class="comment">6 4</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奶牛选美</title>
      <link href="2022/01/16/nai-niu-xuan-mei/"/>
      <url>2022/01/16/nai-niu-xuan-mei/</url>
      
        <content type="html"><![CDATA[<h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="https://www.acwing.com/problem/content/2062/">2060. 奶牛选美 - AcWing题库</a></p><p>听说最近两斑点的奶牛最受欢迎，约翰立即购进了一批两斑点牛。</p><p>不幸的是，时尚潮流往往变化很快，当前最受欢迎的牛变成了一斑点牛。</p><p>约翰希望通过给每头奶牛涂色，使得它们身上的两个斑点能够合为一个斑点，让它们能够更加时尚。</p><p>牛皮可用一个 N×M 的字符矩阵来表示，如下所示：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">................</span><br><span class="line">..XXXX....XXX...</span><br><span class="line">...XXXX....XX...</span><br><span class="line">.XXXX......XXX..</span><br><span class="line">........XXXXX...</span><br><span class="line">.........XXX....</span><br></pre></td></tr></tbody></table></figure><p>其中，X 表示斑点部分。</p><p>如果两个 X 在垂直或水平方向上相邻（对角相邻不算在内），则它们属于同一个斑点，由此看出上图中恰好有两个斑点。</p><p>约翰牛群里<strong>所有的牛都有两个斑点</strong>。</p><p>约翰希望通过使用油漆给奶牛尽可能少的区域内涂色，将两个斑点合为一个。</p><p>在上面的例子中，他只需要给三个 .. 区域内涂色即可（新涂色区域用 ∗ 表示）：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">................</span><br><span class="line">..XXXX....XXX...</span><br><span class="line">...XXXX*...XX...</span><br><span class="line">.XXXX..**..XXX..</span><br><span class="line">........XXXXX...</span><br><span class="line">.........XXX....</span><br></pre></td></tr></tbody></table></figure><p>请帮助约翰确定，为了使两个斑点合为一个，他需要涂色区域的最少数量。</p><h4 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>{</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> N = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] xx = {<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>,<span class="number">0</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span>[] yy = {<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>};</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span>[][] s = <span class="keyword">new</span> <span class="keyword">char</span>[N][N];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">boolean</span>[][] f = <span class="keyword">new</span> <span class="keyword">boolean</span>[N][N];</span><br><span class="line"><span class="keyword">static</span> List&lt;node&gt;[] q = <span class="keyword">new</span> ArrayList[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">node</span></span>{</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">node</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>{</span><br><span class="line"><span class="keyword">this</span>.x = x;</span><br><span class="line"><span class="keyword">this</span>.y = y;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> cnt)</span> </span>{</span><br><span class="line">f[x][y] = <span class="keyword">true</span>;</span><br><span class="line">q[cnt].add(<span class="keyword">new</span> node(x, y));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x1 = x + xx[i];</span><br><span class="line"><span class="keyword">int</span> y1 = y + yy[i];</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &lt;= x1 &amp;&amp; x1 &lt; n &amp;&amp; <span class="number">0</span> &lt;= y1 &amp;&amp; y1 &lt; m &amp;&amp; !f[x1][y1] &amp;&amp; s[x1][y1] == <span class="string">'X'</span>)</span><br><span class="line">bfs(x1, y1, cnt);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">Scanner inScanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">n = inScanner.nextInt();</span><br><span class="line">m = inScanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; q.length; i ++)</span><br><span class="line">q[i] = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line">String ss;</span><br><span class="line">ss = inScanner.next();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++)</span><br><span class="line">s[i][j] = ss.charAt(j);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!f[i][j] &amp;&amp; s[i][j] == <span class="string">'X'</span>)</span><br><span class="line">{</span><br><span class="line">bfs(i, j, cnt);</span><br><span class="line">cnt ++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">inScanner.close();</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">for</span>(node a : q[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">for</span>(node b : q[<span class="number">1</span>])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> t = Math.abs(a.x - b.x) + Math.abs(a.y - b.y) - <span class="number">1</span>;</span><br><span class="line">ans = Math.min(ans, t);</span><br><span class="line">}</span><br><span class="line">System.out.println(ans);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment">6 16</span></span><br><span class="line"><span class="comment">................</span></span><br><span class="line"><span class="comment">..XXXX....XXX...</span></span><br><span class="line"><span class="comment">...XXXX....XX...</span></span><br><span class="line"><span class="comment">.XXXX......XXX..</span></span><br><span class="line"><span class="comment">........XXXXX...</span></span><br><span class="line"><span class="comment">.........XXX....</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>粉刷栅栏</title>
      <link href="2022/01/15/fen-shua-zha-lan/"/>
      <url>2022/01/15/fen-shua-zha-lan/</url>
      
        <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>题目链接：<a href="https://www.acwing.com/problem/content/1989/">1987. 粉刷栅栏 - AcWing题库</a></p><p>农夫约翰发明了一种绝妙的方法来粉刷牛棚旁边的长栅栏（把栅栏想象成一维的数轴）。</p><p>他只需要在他最喜欢的奶牛贝茜身上挂一个刷子，然后在一旁悠闲的喝凉水就行了。</p><p>贝茜沿着栅栏来回走动时，会将她走过的栅栏部分涂上油漆。</p><p>贝茜从栅栏上的位置 0 处开始，共进行 N 次移动。</p><p>移动可能形如 <code>10 L</code>，表示向左移动 10 单位距离，也可能形如 <code>15 R</code>，表示向右移动 15 单位距离。</p><p>给定贝茜的 N 次移动列表，约翰想知道至少被涂抹了 2 层油漆的区域的总长度。</p><p>整个行进过程中，贝茜距离出发地的距离不会超过 $10^9$。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        Map&lt;Integer,Integer&gt; m = <span class="keyword">new</span> TreeMap&lt;&gt;( (a,b) -&gt; a-b );</span><br><span class="line">        n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            String s;</span><br><span class="line">            x = in.nextInt();</span><br><span class="line">            s = in.next();</span><br><span class="line">            <span class="keyword">if</span>(s.equals(<span class="string">"L"</span>))</span><br><span class="line">            {</span><br><span class="line">                m.put(idx, m.getOrDefault(idx, <span class="number">0</span>) - <span class="number">1</span>);</span><br><span class="line">                idx -= x;</span><br><span class="line">                m.put(idx, m.getOrDefault(idx, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">                </span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                m.put(idx, m.getOrDefault(idx, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">                idx += x;</span><br><span class="line">                m.put(idx, m.getOrDefault(idx, <span class="number">0</span>) - <span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">long</span> sum = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i : m.keySet())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(sum &lt;= <span class="number">1</span> &amp;&amp; sum + m.get(i) &gt; <span class="number">1</span>)</span><br><span class="line">                p = i;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(sum &gt; <span class="number">1</span> &amp;&amp; sum + m.get(i) &lt;= <span class="number">1</span>)</span><br><span class="line">                ans += i - p;</span><br><span class="line">            sum += m.get(i);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(ans);</span><br><span class="line">        in.close();</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">6</span></span><br><span class="line"><span class="comment">2 R</span></span><br><span class="line"><span class="comment">6 L</span></span><br><span class="line"><span class="comment">1 R</span></span><br><span class="line"><span class="comment">8 L</span></span><br><span class="line"><span class="comment">1 R</span></span><br><span class="line"><span class="comment">2 R</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笨拙的手指</title>
      <link href="2022/01/13/ben-zhuo-de-shou-zhi/"/>
      <url>2022/01/13/ben-zhuo-de-shou-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>奶牛贝茜正在学习如何在不同进制之间转换数字。</p><p>但是她总是犯错误，因为她无法轻易的用两个前蹄握住笔。</p><p>每当贝茜将数字转换为一个新的进制并写下结果时，她总是将其中的某一位数字写错。</p><p>例如，如果她将数字 $14$ 转换为二进制数，那么正确的结果应为$ 11101110$，但她可能会写下 $01100110 或 11111111$。</p><p>贝茜不会额外添加或删除数字，但是可能会由于写错数字的原因，写下包含前导 00 的数字。</p><p>给定贝茜将数字 $N$ 转换为二进制数字以及三进制数字的结果，请确定 $N$ 的正确初始值（十进制表示）。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>进行枚举，枚举每位出错，然后对比出错后两者是否相等。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.lang.Math;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>{</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">work</span><span class="params">(String a, String b)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">int</span> la = a.length();</span><br><span class="line">        <span class="keyword">int</span> lb = b.length();</span><br><span class="line">        <span class="keyword">char</span>[] sa = a.toCharArray();</span><br><span class="line">        <span class="keyword">char</span>[] sb = b.toCharArray();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; la; i ++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">char</span> qa = sa[i];</span><br><span class="line">            <span class="keyword">if</span>(sa[i] == <span class="string">'0'</span>)</span><br><span class="line">                sa[i] = <span class="string">'1'</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sa[i] = <span class="string">'0'</span>;</span><br><span class="line">            String a1 = <span class="keyword">new</span> String(sa);</span><br><span class="line">            <span class="keyword">int</span> na = Integer.parseInt(a1, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lb; j ++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">char</span> qb = sb[j];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">char</span> k = <span class="string">'0'</span>; k &lt;= <span class="string">'2'</span>; k ++)</span><br><span class="line">                {    </span><br><span class="line">                    <span class="keyword">if</span>(k != qb)</span><br><span class="line">                    {</span><br><span class="line">                        sb[j] = k;</span><br><span class="line">                        String b1 = <span class="keyword">new</span> String(sb);</span><br><span class="line">                        <span class="keyword">int</span> nb = Integer.parseInt(b1, <span class="number">3</span>);</span><br><span class="line">                        <span class="keyword">if</span>(na == nb)</span><br><span class="line">                            <span class="keyword">return</span> na;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                sb[j] = qb;</span><br><span class="line">            }</span><br><span class="line">            sa[i] = qa;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s,s1;</span><br><span class="line">        s = in.next();</span><br><span class="line">        s1 = in.next();</span><br><span class="line">        <span class="keyword">int</span> ans = work(s, s1);</span><br><span class="line">        System.out.printf(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu搭建docker以及wordpress</title>
      <link href="2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/"/>
      <url>2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/</url>
      
        <content type="html"><![CDATA[<h3 id="安装docker以及搭建wordpress的过程。"><a href="#安装docker以及搭建wordpress的过程。" class="headerlink" title="安装docker以及搭建wordpress的过程。"></a>安装docker以及搭建wordpress的过程。</h3><ol><li><p>安装docker，根据官方文档的安装过程进行一步步安装。</p><p>安装文档地址：<a href="https://docs.docker.com/engine/install/ubuntu/">https://docs.docker.com/engine/install/ubuntu/</a></p></li><li><p>启动docker服务：<code>sudo service docker start</code></p></li><li><p>docker安装wordpress：</p><figure class="highlight do"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull wordpress：latest</span><br></pre></td></tr></tbody></table></figure></li><li><p>docker安装mysql</p><figure class="highlight do"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull mysql</span><br></pre></td></tr></tbody></table></figure><p>配置mysql：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d -p 3306:3306 -v /var/lib/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql mysql</span><br></pre></td></tr></tbody></table></figure><p>-d： 后台运行，我们数据库肯定上需要一直在跑的嘛。<br>-p： 上映射端口，mysql容器相当于一台虚拟机，是不能直接从外网访问的，需要通过主机去访问，前面的上主机端口 : 后面上容器端口，现在上将3306映射到3306上，这样访问公网的3306就是容器的端口了，但一般可以改其他端口，不安全。<br>-v： 是相当于文件夹重定向吧，将主机的一个目录和容器目录同步，这样会方便修改日期的文件及配置。<br>-e： 环境变量，设置数据库密码，还有–name 容器的名称。</p><p><code>mysql  -u root -p</code>进入mysql</p></li><li><p>运行wordpress</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有volume的</span></span><br><span class="line">sudo docker run --name wordpress -v /<span class="keyword">var</span>/www/html:<span class="regexp">/var/</span>www/html --link mysql:mysql -p <span class="number">5001</span>:<span class="number">80</span> -d wordpress</span><br><span class="line"><span class="comment">//没有数据卷的</span></span><br><span class="line">sudo docker run --name wordpress --link mysql:mysql -p <span class="number">5001</span>:<span class="number">80</span> -d wordpress</span><br></pre></td></tr></tbody></table></figure></li><li><p>输入服务器ip就进行构建。</p><p>桥接模式直接输入虚拟机的ip，我的是<code>192.168.43.100</code></p></li><li><p>选择安装的语言。<img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105193948170.png" alt=""></p></li><li><p>设置有关数据库的信息。<img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105194206220.png" alt=""></p></li><li><p>需要注意的是：<font color="red">mysql要存在wordpress数据库</font></p><font color="red">如果虚拟机的网络配置为NAT模式，数据库主机为localhost</font><p><img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105194832393.png" alt=""></p></li><li><p>然后进行安装。</p><p><img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105195042500.png" alt=""></p></li><li><p>安装成功</p><p><img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105195122276.png" alt=""></p></li><li><p>登录用户。</p><p><img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105195136423.png" alt=""></p></li><li><p>然后就完成了wordpress的安装。</p><p><img src="/2021/11/06/ubuntu-da-jian-docker-yi-ji-wordpress/image-20211105195528701.png" alt=""></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 搭建教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3599 Koishi Loves Construction</title>
      <link href="2021/03/11/p3599-koishi-loves-construction/"/>
      <url>2021/03/11/p3599-koishi-loves-construction/</url>
      
        <content type="html"><![CDATA[<p>题目链接：<a href="https://www.luogu.com.cn/problem/P3599">https://www.luogu.com.cn/problem/P3599</a></p><p>题解：</p><p><img src="/2021/03/11/p3599-koishi-loves-construction/1.png" alt=""></p><p>代码：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mset(s, _) memset(s, _, sizeof(s))</span></span><br><span class="line"><span class="comment">//#define lo</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">coutx</span><span class="params">(<span class="keyword">double</span> q, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//cout.setf(ios::fixed);</span></span><br><span class="line"><span class="comment">//cout.unsetf(ios::fixed);</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(x) &lt;&lt; q &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ksc</span><span class="params">(ll x, ll y, ll mod)</span><span class="comment">//快速乘</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> ( x * y - (ll) ( (<span class="keyword">long</span> <span class="keyword">double</span>) x / mod*y )*mod + mod ) % mod;</span><br><span class="line">}</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">}</span><br><span class="line"><span class="function">ll <span class="title">lcm</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a/gcd(a,b)*b;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> X, T;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(k); i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(k % i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">ll inv[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(n != <span class="number">4</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">2</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i ++)</span><br><span class="line">{</span><br><span class="line">inv[i] = (ll)((n - n / i) * inv[n % i]) % n;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (i * inv[i - <span class="number">1</span>] + n) % n &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; n &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">4</span>)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"2 1 3 2 4"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lo</span></span><br><span class="line"> freopen(<span class="string">"data.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"> freopen(<span class="string">"data.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="number">0</span>));</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; X &gt;&gt; T;</span><br><span class="line"><span class="keyword">if</span>(X == <span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">while</span>(T --)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> a = n;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"2 1"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n % <span class="number">2</span>)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(b &lt;= n - <span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; a &lt;&lt; <span class="string">' '</span> &lt;&lt; b;</span><br><span class="line">a -= <span class="number">2</span>;</span><br><span class="line">b += <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"> } </span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">while</span>(T --)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">4</span> || isprime(n))</span><br><span class="line">work();</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> }</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>（一）一群小青蛙呱蹦呱蹦呱</title>
      <link href="2021/03/01/yi-qun-xiao-qing-wa-gu-beng-gu-beng-gu/"/>
      <url>2021/03/01/yi-qun-xiao-qing-wa-gu-beng-gu-beng-gu/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>链接：<a href="https://ac.nowcoder.com/acm/contest/9981/J">https://ac.nowcoder.com/acm/contest/9981/J</a><br>来源：牛客网</p><p>有n个格子，每个格子里有一个数，1,2,3,4…n   </p><p>   牛牛放出<strong>无穷</strong>只青蛙。   </p><p>   第一只青蛙的路线是：1-&gt;2-&gt;4-&gt;8-&gt;16-&gt;….   </p><p>   第二只青蛙的路线是：1-&gt;3-&gt;9-&gt;27-&gt;81-&gt;….   </p><p>   第三只青蛙的路线是：1-&gt;5-&gt;25-&gt;125….   </p><p>   第四只青蛙的路线是：1-&gt;7-&gt;49……..   </p><p>   。。。。。。   </p><p>   用数学语言描述，第 i只青蛙的路线是首项为1，公比为p(i)的等比数列，其中p(i)代表第个素数。   </p><p>   当青蛙跳到一个格子上，如果这个格子上面有一个数，青蛙就会把这个数吃掉。   </p><p>   牛牛想知道，所有<strong>没有被</strong>吃掉的数的lcm（最小公倍数 ，Least common multiple）是多少？   </p><p>   由于这个lcm可能非常大，请输出它对10<sup>9</sup> + 7取模的值。</p><h4 id="输入描述："><a href="#输入描述：" class="headerlink" title="输入描述："></a>输入描述：</h4><p>一个整数n</p><p>1 &lt;= n &lt;= 1.6 * 10<sup>8</sup></p><h4 id="输出描述："><a href="#输出描述：" class="headerlink" title="输出描述："></a>输出描述：</h4><p>如果所有数都被吃掉了，请输出一个字符串”empty”</p><p>否则输出所有没有被吃掉的数的lcm，对模10<sup>9</sup> + 7</p><h5 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h5><p><img src="/2021/03/01/yi-qun-xiao-qing-wa-gu-beng-gu-beng-gu/silu.png" style="zoom: 67%;"></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI acos(-1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mset(s, _) memset(s, _, sizeof(s))</span></span><br><span class="line"><span class="comment">//#define lo</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">coutx</span><span class="params">(<span class="keyword">double</span> q, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//cout.setf(ios::fixed);</span></span><br><span class="line"><span class="comment">//cout.unsetf(ios::fixed);</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(x) &lt;&lt; q &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">ksc</span><span class="params">(ll x, ll y, ll mod)</span><span class="comment">//快速乘</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> ( x * y - (ll) ( (<span class="keyword">long</span> <span class="keyword">double</span>) x / mod*y )*mod + mod ) % mod;</span><br><span class="line">}</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">}</span><br><span class="line"><span class="function">ll <span class="title">lcm</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a/gcd(a,b)*b;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod1 = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">8e7</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">bool</span> isprime[N];</span><br><span class="line">ll vis[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sieve</span><span class="params">(<span class="keyword">int</span> n)</span><span class="comment">//线性筛</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">isprime[<span class="number">0</span>] = isprime[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i ++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!isprime[i])vis[ ++ cnt] = i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * vis[j] &lt;= n; j ++)</span><br><span class="line">{</span><br><span class="line">isprime[i * vis[j]] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i % vis[j] == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">log</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">ll res = <span class="number">0</span>;</span><br><span class="line">ll t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(t &lt;= m)</span><br><span class="line">{</span><br><span class="line">t *= n;</span><br><span class="line">res ++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> res - <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function">ll <span class="title">poww</span><span class="params">(ll a, ll b)</span><span class="comment">//快速幂</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">ll ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(b &amp; <span class="number">1</span>) </span><br><span class="line">ans = ksc(ans, a, mod1) % mod1;</span><br><span class="line">a = ksc(a, a, mod1) % mod1;</span><br><span class="line">a %= mod1;</span><br><span class="line">b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">ans %= mod1;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> ans % mod1;</span><br><span class="line"> } </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> lo</span></span><br><span class="line"> freopen(<span class="string">"data.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"> freopen(<span class="string">"data.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="number">0</span>));</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> n, cnt;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span>(n &lt;= <span class="number">5</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"empty"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">cnt = sieve(n / <span class="number">2</span>);</span><br><span class="line">ans = poww(<span class="number">2</span>, <span class="built_in">log</span>(<span class="number">2</span>, n / <span class="number">3</span>));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= cnt; i ++)</span><br><span class="line">{</span><br><span class="line">ans = (ans % mod1) * poww(vis[i], <span class="built_in">log</span>(vis[i], n / <span class="number">2</span>));</span><br><span class="line">ans %= mod1;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans % mod1;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> }</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喜欢</title>
      <link href="2020/12/22/xi-huan/"/>
      <url>2020/12/22/xi-huan/</url>
      
        <content type="html"><![CDATA[<ol><li><h5 id="喜欢女孩呢，不能犹豫，不能干等，也不能要脸，不然这个女孩就是别人的了。"><a href="#喜欢女孩呢，不能犹豫，不能干等，也不能要脸，不然这个女孩就是别人的了。" class="headerlink" title="喜欢女孩呢，不能犹豫，不能干等，也不能要脸，不然这个女孩就是别人的了。"></a><font color="Fuchsia">喜欢女孩呢，不能犹豫，不能干等，也不能要脸，不然这个女孩就是别人的了。</font></h5></li><li><font color="Fuchsia">我不是突然不喜欢你了，是因为你的每次逃跑，都把我一个人留在原地。</font></li><li><font color="Fuchsia">第一个阶段否定，第二个阶段愤怒，第三个阶段妥协和期待，第四个阶段吃醋</font></li></ol>]]></content>
      
      
      <categories>
          
          <category> 喜欢 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 喜欢 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
